{"version":3,"sources":["images/indulge-restaurant.jpg","axios.js","services/restaurant.service.js","components/restaurant-list.component.js","components/Autocomplete.js","components/Marker.js","components/MyGoogleMap.js","components/add-restaurant.component.js","components/restaurant.component.js","components/maps.component.js","components/add-cuisine.js","components/header.js","components/footer.js","components/register.js","components/login.js","components/logout.js","components/homepage.js","components/cuisine-list.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","axiosInstance","axios","create","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","id","catch","err","get","put","delete","city","RestaurantList","props","handleChange","event","setState","selectedOption","target","value","onChangeSearchCity","bind","retrieveRestaurants","refreshList","setActiveRestaurant","searchCity","retrieveCities","state","user","restaurants","currentRestaurant","currentIndex","cities","this","e","RestaurantDataService","getAll","restaurant","index","findByCity","preventDefault","getAllCities","className","onSubmit","aria-label","onChange","map","type","onClick","name","website","address","cuisine","to","Component","Wrapper","styled","div","AutoComplete","onPlaceChanged","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","searchInput","blur","clearSearchBox","mapApi","options","fields","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","placeholder","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","restaurant_name","center","zoom","draggable","lat","lng","submitted","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","getCity","addressArray","i","length","j","long_name","getState","saveRestaurant","newRestaurant","Geocoder","geocode","results","address_components","formatted_address","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","key","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","bordered","Item","label","Restaurant","onChangeName","onChangeWebsite","onChangeAddress","onChangeCity","getRestaurant","updateRestaurant","deleteRestaurant","retrieveCuisines","setCuisine","cuisines","message","match","params","prevState","update","history","push","getAllCuisines","htmlFor","required","Geocode","setApiKey","AddCuisine","onChangeType","saveCuisine","newCuisine","createCuisine","useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","link","margin","spacing","toolbarTitle","flexGrow","Header","classes","Fragment","CssBaseline","AppBar","position","color","elevation","Toolbar","toolbar","Typography","variant","noWrap","Link","component","NavLink","underline","Button","ul","padding","listStyle","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","Footer","paper","display","flexDirection","alignItems","avatar","backgroundColor","secondary","form","width","submit","SignUp","useHistory","initialFormData","Object","freeze","email","user_name","password","useState","formData","updateFormData","trim","Container","maxWidth","Avatar","noValidate","Grid","container","item","xs","TextField","fullWidth","res","justify","SignIn","autoFocus","useEffect","refresh_token","removeItem","Homepage","random_restaurant","floor","random","CuisineList","setActiveCuisine","currentCuisine","App","path","Register","Login","Logout","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.215b505e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/indulge-restaurant.638567c1.jpg\";","import axios from 'axios';\n\n// const baseURL = 'http://127.0.0.1:8080/';\nconst baseURL = 'https://whatstoeat-backend.herokuapp.com/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\t// timeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'JWT ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n\t\t\talert(\n\t\t\t\t'A server/network error occurred. ' +\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\n\t\t\t);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + '/api/token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('api/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\t\t\t\t\t\t\t// localStorage.setItem('id', response.data.id)\n\t\t\t\t\t\t\t// localStorage.setItem('user_name', response.data.user_name)\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\tconsole.log(\"front user \", response.data.id)\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;","// import http from \"../http-common\";\nimport axiosInstance from '../axios';\n\nclass RestaurantDataService {\n    getAll() {\n        // return http.get(\"/restaurants\");\n        return axiosInstance.get(\"/restaurants\")\n    }\n\n    get(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`/restaurants/${id}`);\n    }\n\n    create(data) {\n        // return http.post(\"/restaurants\", data);\n        return axiosInstance.post(\"/restaurants\", data);\n    }\n\n    update(id, data) {\n        // return http.put(`/restaurants/${id}`, data);\n        return axiosInstance.put(`/restaurants/${id}`, data);\n    }\n\n    delete(id) {\n        // return http.delete(`/restaurants/${id}`);\n        return axiosInstance.delete(`/restaurants/${id}`);\n    }\n\n    // deleteAll() {\n    //     return http.delete(\"/restaurants\");\n    // }\n    findByCity(city) {\n        // return http.get(`/restaurants?city=${city}`);\n        return axiosInstance.get(`/restaurants?city=${city}`);\n    }\n\n    getAllCities() {\n        // return http.get(\"/restaurants/city\")\n        return axiosInstance.get(\"/restaurants/city\")\n    }\n\n    createCuisine(data) {\n        return axiosInstance.post('/api/cuisine/', data)\n    }\n\n    getAllCuisines() {\n        // return http.get(\"/tutorial\");\n        return axiosInstance.get(\"/api/cuisine/\")\n    }\n\n    // updateCuisine(id, data) {\n    //     // return http.put(`/tutorial/${id}`, data);\n    //     return axiosInstance.put(`/tutorials/${id}`, data)\n    // }\n}\n\nexport default new RestaurantDataService();","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport '../index.css';\n// import Select from 'react-select';\nimport images from '../images/indulge-restaurant.jpg';\n\nexport default class RestaurantList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveRestaurant = this.setActiveRestaurant.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: []\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRestaurants();\n        this.retrieveCities();\n    }\n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        console.log(\"*&*&*&*&* \", this.state.user)\n\n        RestaurantDataService.getAll()\n\n            .then(response => {\n                // const random_num = Math.floor(Math.random()* response.data.lenth)\n                // console.log(\"len \", random_num)\n                // const random = response.data[Math.floor(Math.random() * response.data.length)]\n                // console.log(\"ran \", random)\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveRestaurants();\n        this.setState({\n            currentRestaurant: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveRestaurant(restaurant, index) {\n        this.setState({\n            currentRestaurant: restaurant,\n            currentIndex: index\n        });\n    }\n\n    searchCity(event) {\n        // debugger;\n        RestaurantDataService.findByCity(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    currentRestaurant: null\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOption: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    // state = {\n    //     selectedOption: null,\n    // };\n\n    handleChange = (event) => {\n        // debugger;\n        this.setState({ selectedOption: event.target.value }, () =>\n            console.log('Option selected: ', event)\n        )\n    }\n\n    // handleChange(event) {\n    //     console.log(event)\n    //     this.setState({\n    //         value: event.target.value\n    //     });\n\n    // }\n\n    // handleSubmit(event) {\n    //     console.log(\"handleSubmit \", event);\n    //     // debugger;\n    //     event.preventDefault();\n    // }\n\n\n\n    render() {\n        const { restaurants, currentRestaurant, currentIndex } = this.state;\n\n        return (\n            // <div className='rowC'>\n            <div className=\"bg\">\n            <div className=\"card\">\n            <div className=\"list row\">\n                <div className=\"col-md-8\">\n                    {/* <div className=\"input-group mb-3\"> */}\n\n                        <div className=\"container\">\n                                <form onSubmit={this.searchCity}>\n                                    {/* <Select\n                                        value={this.state.selectedOption}\n                                        onChange={this.handleChange}\n                                        options={\n                                        this.state.cities.map((city, index) => {\n                                            return {\n                                                label: city.city,\n                                                value: city\n                                                // key: index\n                                            }\n                                        })\n                                    }\n                                    /> */}\n                                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                        value={this.state.selectedOption}\n                                        onChange={this.handleChange}>\n                                        {/* {citiesList} */}\n                                        {this.state.cities.map((city, index) => (\n                                            <option key={index} value={city.city}>{city.city}</option>\n                                        ))}\n                                    </select>\n                                    <input type=\"submit\" value=\"Submit\" />\n                                </form>\n                        </div>\n{/*                     <div className=\"input-group-append\">\n                            <button\n                                className=\"btn btn-outline-secondary\"\n                                type=\"button\"\n                                value={this.state.selectedOption}\n                                onClick={this.searchCity}>\n                                Search\n                            </button>\n                        </div> */}\n                    {/* </div> */}\n                </div>\n                <div className=\"col-md-8\">\n                    <h4>Restaurant List</h4>\n                    <ul className=\"list-group\">\n                        {restaurants &&\n                            restaurants.map((restaurant, index) => (\n                                <li\n                                    className={\n                                        \"list-group-item \" +\n                                        (index === currentIndex ? \"active\" : \"\")\n                                    }\n                                    onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                    key={index}>\n                                    {restaurant.name}\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n\n                <div className=\"col=md-6\">\n                    {currentRestaurant ? (\n                        <div>\n                            <h4>Restaurant</h4>\n                            <div>\n                                <label>\n                                    <strong>Name:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.name}\n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Website:</strong>\n                                </label>{\" \"}\n                                <a target='_blank' href={currentRestaurant.website}>{currentRestaurant.website}</a>\n                                \n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Address:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.address}\n                            </div>\n                            {/* <div>\n                                <label>\n                                    <strong>City:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.city}\n                            </div> */}\n                            <ul>\n                                <label>\n                                    <strong>Cuisines:</strong>\n                                </label>\n                                {/* {currentTutorial.category} */}\n                                {currentRestaurant.cuisine.map((cuisine) => {\n                                    return <li >{cuisine.type}</li>\n                                })}\n                            </ul>\n                            <Link\n                                to={\"/restaurants/\" + currentRestaurant.id}\n                                className=\"badge badge-light\">\n                                Edit\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Restaurant...</p>\n                        </div>\n                    )}\n                </div>\n                </div>\n                {/* <div className=\"bg\"></div> */}\n                {/* <img className=\"bg\" src={images} alt=\"Food\" /> */}\n                {/* <Wheel restaurants={this.state.restaurants}/> */}\n            </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    padding: 20px;\n    text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            fields: [\"name\", \"url\", \"website\", \"address_components\", \"geometry\"],\n            types: ['establishment'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n        console.log(\"place \", place)\n        console.log(\"contact \", place.website)\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;","import React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\n\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nimport { Descriptions } from 'antd';\nimport RestaurantDataService from \"../services/restaurant.service\";\n\n// import AddCuisine from \"./add-cuisine\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY\nconst Wrapper = styled.main`\n    width: 100%;\n    height: 100%;\n`;\n\n\n\nclass MyGoogleMap extends Component {\n    constructor(props) {\n        super(props)\n        this.saveRestaurant = this.saveRestaurant.bind(this)\n        this.newRestaurant = this.newRestaurant.bind(this)\n\n    }\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        user: localStorage.getItem('id'),\n        places: [],\n        restaurant_name: '',\n        website: '',\n        center: [],\n        zoom: 9,\n        address: '',\n        city: '',\n        state: '',\n        draggable: true,\n        lat: null,\n        lng: null,\n\n        submitted: false\n    };\n\n    componentWillMount() {\n        // this.setCurrentLocation();\n        this.setState({\n            center: [47.608013, -122.335167],\n            lat: 47.608013,\n            lng: -122.335167,\n        })\n    }\n\n    saveRestaurant() {\n        const data = {\n            user: this.state.user,\n            name: this.state.restaurant_name,\n            website: this.state.website,\n            address: this.state.address,\n            city: this.state.city\n        };\n        // this.autoComplete = new mapApi.places.Autocomplete(\n        //     this.state.address,\n        // );\n\n        // const auto = this.autoComplete.getPlace()\n        console.log(\"potato \", data)\n\n        RestaurantDataService.create(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    name: response.data.name, \n                    website: response.data.website,\n                    address: response.data.address,\n                    city: response.data.city,\n                    user: this.state.user,\n\n                    submitted: true\n                    \n                });\n                console.log(\"saveRestaurant \", this.state.submitted)\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newRestaurant() {\n        this.setState({\n            id: null,\n            user: this.state.user,\n            name: \"\",\n            website: \"\",\n            address: \"\",\n            city: \"\",\n\n            submitted: false\n        });\n        console.log(\"newRestaurant \", this.submitted)\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        console.log(\"addPlace \", place)\n        this.setState({\n            places: [place],\n            restaurant_name: place.name,\n            website: place.website,\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        city = addressArray[i].long_name;\n                        return city;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    const addressArray = results[0].address_components\n                    const city = this.getCity(addressArray)\n                    const state = this.getState(addressArray)\n                    this.setState({ \n                        address: results[0].formatted_address,\n                        city: city,\n                        state: state});\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    // setCurrentLocation() {\n    //     if ('geolocation' in navigator) {\n    //         navigator.geolocation.getCurrentPosition((position) => {\n    //             this.setState({\n    //                 center: [position.coords.latitude, position.coords.longitude],\n    //                 lat: position.coords.latitude,\n    //                 lng: position.coords.longitude\n    //             });\n    //         });\n    //     }\n    // }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n                {mapApiLoaded && (\n                    <div>\n                        <h4>Restaurant Search</h4>\n                        <AutoComplete className=\"auto-complete\" map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: `${API_KEY}`,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                {/* <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Restaurant: <span>{this.state.restaurant_name}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div> */}\n                <div className=\"descriptions\">\n                    <Descriptions bordered>\n                        {/* <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item> */}\n                        {/* <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item> */}\n                        <Descriptions.Item label=\"Restaurant\">{this.state.restaurant_name}</Descriptions.Item>\n                        <br />\n                        <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n                <div className=\"submit-form\">\n                    {this.state.submitted ? (\n                        <div>\n                            <h4>You submitted successfully!</h4>\n                            <button className=\"btn btn-success\" onClick={this.newRestaurant}>\n                                Add\n                            </button>\n                        </div>\n                    ) : (\n                        <div>\n                        <button onClick={this.saveRestaurant} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                        </div>\n                    )}\n\n\n                </div>\n            </Wrapper >\n\n        );\n    }\n}\n\nexport default MyGoogleMap;","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MyGoogleMap from './MyGoogleMap';\n\n\nexport default class AddRestaurant extends Component {\n    constructor(props) {\n        super(props)\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangeWebsite = this.onChangeWebsite.bind(this)\n        this.onChangeAddress = this.onChangeAddress.bind(this)\n        this.onChangeCity = this.onChangeCity.bind(this)\n        // this.onChangeZipCode = this.onChangeZipCode.bind(this)\n        this.saveRestaurant = this.saveRestaurant.bind(this)\n        this.newRestaurant = this.newRestaurant.bind(this)\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            name: \"\",\n            website: \"\",\n            address: \"\",\n            city: \"\",\n            // zip_code: null,\n\n            submitted: false\n        };\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeWebsite(e) {\n        this.setState({\n            website: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    onChangeCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    // onChangeZipCode(e) {\n    //     this.setState({\n    //         zip_code: e.target.value\n    //     })\n    // }\n\n    saveRestaurant() {\n        const data = {\n            user: localStorage.getItem('id'), \n            name: this.state.name,\n            website: this.state.website,\n            address: this.state.address,\n            city: this.state.city\n        };\n        // this.autoComplete = new mapApi.places.Autocomplete(\n        //     this.state.address,\n        // );\n\n        // const auto = this.autoComplete.getPlace()\n        console.log(\"@@@@@@ \", this.state.user)\n\n        RestaurantDataService.create(data)\n            .then(response => {\n                this.setState({\n                    user: localStorage.getItem('id'),\n                    name: response.data.name,\n                    website: response.data.website,\n                    address: response.data.address,\n                    city: response.data.city,\n                    \n                    submitted: true\n                });\n                console.log(\"response \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newRestaurant() {\n        this.setState({\n            user: localStorage.getItem('id'),\n            name: \"\",\n            website: \"\",\n            address: \"\",\n            city: \"\",\n\n            submitted: false\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"submit=form\">\n                {this.state.submitted ? (\n                    <div>\n                        <h4>You submitted successfully!</h4>\n                        <button className=\"btn btn-success\" onClick={this.newRestaurant}>\n                            Add\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Restaurant Name</label>\n                            <input \n                                type=\"text\"\n                                className=\"formControl\"\n                                id=\"name\"\n                                required value={this.state.name}\n                                onChange={this.onChangeName}\n                                name=\"name\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"website\">Website</label>\n                            <input \n                                type=\"text\"\n                                className=\"formControl\"\n                                id=\"website\"\n                                required value={this.state.website}\n                                onChange={this.onChangeWebsite}\n                                name=\"website\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">Address</label>\n                            <input \n                                type=\"text\"\n                                className=\"formControl\"\n                                id=\"address\"\n                                required value={this.state.address}\n                                onChange={this.onChangeAddress}\n                                name=\"address\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city\">City</label>\n                            <input \n                                type=\"text\"\n                                className=\"formControl\"\n                                id=\"city\"\n                                required value={this.state.city}\n                                onChange={this.onChangeCity}\n                                name=\"city\"\n                            />\n                        </div>\n{/* \n                        <div className=\"form-group\">\n                            <label htmlFor=\"city\">Zip Code</label>\n                            <input \n                                type=\"text\"\n                                className=\"formControl\"\n                                id=\"zip_code\"\n                                required value={this.state.zip_code}\n                                onChange={this.onChangeZipCode}\n                                name=\"zip_code\"\n                            />\n                        </div> */}\n\n                        <button onClick={this.saveRestaurant} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                    </div>\n                )}\n                <Switch>\n                    <div className=\"main-wrapper\">\n                        <Route exact path=\"/add\" component={MyGoogleMap} />\n                    </div>\n                </Switch>\n            </div>\n\n        );\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\n\nexport default class Restaurant extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeWebsite = this.onChangeWebsite.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.getRestaurant = this.getRestaurant.bind(this);\n        this.updateRestaurant = this.updateRestaurant.bind(this);\n        this.deleteRestaurant = this.deleteRestaurant.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setCuisine = this.setCuisine.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentRestaurant: {\n                id: null,\n                name: \"\",\n                website: \"\",\n                address: \"\",\n                city: \"\",\n                cuisine: '',\n            },\n            cuisines: [],\n\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getRestaurant(this.props.match.params.id);\n        this.retrieveCuisines();\n    }\n\n    onChangeName(e) {\n        const name = e.target.value;\n\n        this.setState(prevState => ({\n                currentRestaurant: {\n                    ...prevState.currentRestaurant,\n                    name: name\n            }\n        }));\n    }\n\n    onChangeWebsite(e) {\n        const website = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                website: website\n            }\n        }));\n    }\n\n    onChangeAddress(e) {\n        const address = e.target.value\n        \n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                address: address\n            }\n        }));\n    }\n\n    onChangeCity(e) {\n        const city = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                city: city\n            }\n        }));\n    }\n\n    getRestaurant(id) {\n        RestaurantDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentRestaurant: response.data\n                });\n                console.log(\"get restaurant \", response.data)\n                console.log(this.state.currentRestaurant)\n                console.log(this.state.currentRestaurant.cuisine)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateRestaurant() {\n\n        RestaurantDataService.update(\n            this.state.currentRestaurant.id, \n            this.state.currentRestaurant\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The restaurant was update successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteRestaurant() {\n        RestaurantDataService.delete(this.state.currentRestaurant.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/restaurants\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieve cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setCuisine(cuisine, index) {\n        console.log(\"set cuisine \", cuisine)\n        this.setState({\n            cuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    handleChange(event) {\n        const data = {\n            id: this.state.currentRestaurant.id,\n            name: this.state.currentRestaurant.name,\n            website: this.state.currentRestaurant.website,\n            address: this.state.currentRestaurant.address,\n            city: this.state.currentRestaurant.city,\n\n            cuisine: event.target.value\n        };\n        // console.log(event.target.getAttribute(\"data-id\").value)\n        console.log(\"event target \", event.target.value)\n\n        this.setState({\n            currentRestaurant: data\n        })\n        // console.log(\"category\", category)\n\n        event.preventDefault();\n    }\n\n    render() {\n        const { currentRestaurant } = this.state\n\n        return (\n            <div>\n                {currentRestaurant ? (\n                    <div className=\"edit-form\">\n                        <h4>Restaurant</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    value={currentRestaurant.name}\n                                    onChange={this.onChangeName}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"website\">Website</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"formControl\"\n                                    id=\"website\"\n                                    required value={currentRestaurant.website}\n                                    onChange={this.onChangeWebsite}\n                                    name=\"website\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"address\">Address</label>\n                                <input \n                                    type=\"address\"\n                                    className=\"formControl\"\n                                    id=\"address\"\n                                    value={currentRestaurant.address}\n                                    onChange={this.onChangeAddress}\n                                    // name=\"address\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"city\">City</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"formControl\"\n                                    id=\"city\"\n                                    required value={currentRestaurant.city}\n                                    onChange={this.onChangeCity}\n                                    name=\"city\"\n                                />\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"city\">Cuisine</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"formControl\"\n                                    id=\"cuisine\"\n                                    required value={currentRestaurant.cuisine.map((cuisine) => {\n                                        return <li >{cuisine.type}</li>\n                                    })}\n                                    // onChange={this.onChangeCity}\n                                    name=\"cuisine\"\n                                />\n                            </div> */}\n                            {/* <ul>\n                                <label>\n                                    <strong>Cuisines:</strong>\n                                </label>\n                                {currentRestaurant.cuisine.map((cuisine) => {\n                                    return <li >{cuisine.type}</li>\n                                })}\n                            </ul> */}\n\n                            {/* <div >\n                                <h4>Cuisine List</h4>\n                                <ul className=\"list-group\">\n                                    {currentRestaurant && \n                                        this.state.currentRestaurant.cuisine.map((cuisine) => (\n                                            <li\n                                                // className={\n                                                //     \"list-group-item \" +\n                                                //     (index === currentIndex ? \"active\" : \"\")\n                                                // }\n                                                // onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                                // key={index}\n                                                >\n                                                {cuisine.type}\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div> */}\n\n\n\n                        </form>\n\n\n                        <div className=\"container\">\n                            <label htmlFor=\"city\">Add Cuisine</label>\n                                <form >\n                                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                        value={this.state.cuisine}\n                                        onChange={this.handleChange}>\n                                        {this.state.cuisines.map((cuisine) => (\n                                            <option key={cuisine.id} value={cuisine.id}>{cuisine.type}</option>\n                                        ))}\n                                    </select>\n                                    {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                </form>\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"badge badge-success\"\n                            onClick={this.updateRestaurant}>\n                            Update\n                        </button>\n\n                        <button\n                            type=\"submit\"\n                            className=\"badge badge=danger mr-2\"\n                            onClick={this.deleteRestaurant}>\n                            Delete\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Click on a Restaurant</p>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {\n    InfoWindow,\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport { Descriptions } from 'antd';\nimport AutoComplete from \"react-google-autocomplete\";\n\n// import GoogleMapReact from 'google-map-react';\n// import AutoComplete from './Autocomplete';\n\nGeocode.setApiKey(\"AIzaSyBaOc-kpmUetfkxEQc60qXzA_p4FZvOmUY\")\n\nexport default class Maps extends Component {\n\n    state = {\n        address: '',\n        city: '',\n        state: '',\n        zoom: 15,\n        height: 400,\n        mapPosition: {\n            lat: 47.608013,\n            lng: -122.335167,\n        },\n        markerPosition: {\n            lat: 47.608013,\n            lng: -122.335167,\n        }\n    }\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.setState({\n                mapPosition: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                },\n                markerPosition: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude,\n                }\n                }, () => {\n                Geocode.fromLatLng(position.coords.latitude, position.coords.longitude)\n                .then(response => {\n                    console.log('response ', response)\n                    const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray),\n                    state =this.getState(addressArray)\n            \n                    this.setState({\n                    address: (address) ? address : \"\",\n                    city: (city) ? city : \"\",\n                    state: (state) ? state : \"\",\n                    })\n                })\n                })\n            })\n            }\n        }\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        city = addressArray[i].long_name;\n                        return city;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n\n    onMarkerDragEnd = (event) => {\n        let newLat = event.latLng.lat();\n        let newLng = event.latLng.lng();\n    \n        Geocode.fromLatLng(newLat, newLng)\n            .then(response => {\n                console.log('response ', response)\n                const address = response.results[0].formatted_address,\n                addressArray = response.results[0].address_components,\n                city = this.getCity(addressArray),\n                state =this.getState(addressArray)\n        \n                this.setState({\n                address: (address) ? address : \"\",\n                city: (city) ? city : \"\",\n                state: (state) ? state : \"\",\n                markerPosition : {\n                    lat: newLat,\n                    lng: newLng\n                },\n                mapPosition : {\n                    lat: newLat,\n                    lng: newLng\n                },\n            })\n        },\n        error => {\n            console.error(error)\n        }\n    )\n    \n        console.log('newLat', newLat);\n        console.log('newLng', newLng)\n    }\n\n    onPlaceSelected = (place) => {\n        const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            state = this.getState(addressArray),\n            newLat = place.geometry.location.lat(),\n            newLng = place.geometry.location.lng();\n        \n            this.setState({\n            address: (address) ? address : \"\",\n            city: (city) ? city : \"\",\n            state: (state) ? state : \"\",\n            markerPosition : {\n                lat: newLat,\n                lng: newLng\n            },\n            mapPosition : {\n                lat: newLat,\n                lng: newLng\n            },\n            })\n        }\n\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n            <GoogleMap\n                defaultZoom={8}\n                defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n            >\n                <Marker\n                    draggable={true}\n                    onDragEnd={this.onMarkerDragEnd}\n                    position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}>\n                    <InfoWindow>\n                        <div>\n                            {this.state.city}\n                        </div>\n                    </InfoWindow>\n                </Marker>\n                <AutoComplete\n                    className=\"auto-complete\"\n                    types={['(regions)']}\n                    onPlaceSelected={this.onPlaceSelected}\n                />\n            </GoogleMap>\n        ));\n        return (\n            <div className=\"descriptions\">\n                <Descriptions bordered>\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n                    {/* <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item> */}\n                </Descriptions>\n                <MapWithAMarker\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBaOc-kpmUetfkxEQc60qXzA_p4FZvOmUY&v=3.exp&libraries=geometry,drawing,places\"\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `400px` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\n\nexport default class AddCuisine extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.saveCuisine = this.saveCuisine.bind(this);\n        this.newCuisine = this.newCuisine.bind(this);\n\n        this.state = {\n            id: null,\n            type: \"\",\n\n            submitted: false\n        };\n    }\n\n    onChangeType(e) {\n        this.setState({\n            type: e.target.value\n        });\n    }\n\n    saveCuisine() {\n        const data = {\n            type: this.state.type\n        };\n\n        RestaurantDataService.createCuisine(data)\n        // axiosInstance.create(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    type: response.data.type,\n\n                    submitted: true\n                });\n                console.log(response.data)\n                // console.log(\"save submitted\", this.state.submitted)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newCuisine() {\n        this.setState({\n            id: null,\n            type: \"\",\n\n            submitted: false\n        });\n        console.log(\"new submitted \", this.state.submitted)\n    }\n\n    render() {\n        return (\n            <div className=\"submit-form\">\n                <h5>Add Cuisine Type</h5>\n                {this.state.submitted ? (\n                    <div>\n                        <h4>You submitted successfully!</h4>\n                        <button className=\"btn btn-success\" onClick={this.newCuisine}>\n                            Add\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <div className=\"form-group\">\n                            {/* <label htmlFor=\"title\">Type</label> */}\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"type\"\n                                required\n                                value={this.state.type}\n                                onChange={this.onChangeType}\n                                name=\"type\"\n                            />\n                        </div>\n\n                        <button onClick={this.saveCuisine} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n\n\n\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\ttoolbarTitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n\nfunction Header() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\televation={0}\n\t\t\t\tclassName={classes.appBar}\n\t\t\t>\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.toolbarTitle}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\tunderline=\"none\"\n\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWhatsToEat\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<Button\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\tto=\"/logout\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\tul: {\n\t\t\tmargin: 0,\n\t\t\tpadding: 0,\n\t\t\tlistStyle: 'none',\n\t\t},\n\t},\n\tfooter: {\n\t\tborderTop: `1px solid ${theme.palette.divider}`,\n\t\tmarginTop: theme.spacing(8),\n\t\tpaddingTop: theme.spacing(3),\n\t\tpaddingBottom: theme.spacing(3),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tpaddingTop: theme.spacing(6),\n\t\t\tpaddingBottom: theme.spacing(6),\n\t\t},\n\t},\n}));\n\nfunction Copyright() {\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © '}\n\t\t\t<Link color=\"inherit\" href=\"https://material-ui.com/\">\n\t\t\t\tYour Website\n\t\t\t</Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\nconst footers = [\n\t{\n\t\ttitle: 'Company',\n\t\tdescription: ['Team', 'History', 'Contact us', 'Locations'],\n\t},\n\t{\n\t\ttitle: 'Features',\n\t\tdescription: [\n\t\t\t'Cool stuff',\n\t\t\t'Random feature',\n\t\t\t'Team feature',\n\t\t\t'Developer stuff',\n\t\t\t'Another one',\n\t\t],\n\t},\n\t{\n\t\ttitle: 'Resources',\n\t\tdescription: [\n\t\t\t'Resource',\n\t\t\t'Resource name',\n\t\t\t'Another resource',\n\t\t\t'Final resource',\n\t\t],\n\t},\n\t{\n\t\ttitle: 'Legal',\n\t\tdescription: ['Privacy policy', 'Terms of use'],\n\t},\n];\n\nfunction Footer() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n\t\t\t\t{/* <Grid container spacing={4} justify=\"space-evenly\">\n\t\t\t\t\t{footers.map((footer) => (\n\t\t\t\t\t\t<Grid item xs={6} sm={3} key={footer.title}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n\t\t\t\t\t\t\t\t{footer.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{footer.description.map((item) => (\n\t\t\t\t\t\t\t\t\t<li key={item}>\n\t\t\t\t\t\t\t\t\t\t<Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid> */}\n\t\t\t\t<Box mt={5}>\n\t\t\t\t\t<Copyright />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory } from 'react-router-dom';\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\temail: '',\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t// Trimming any whitespace\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/user/register/`, {\n\t\t\t\temail: formData.email,\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\thistory.push('/login');\n\t\t\t\tconsole.log(res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign up\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel=\"I want to receive inspiration, marketing promotions and updates via email.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Container>\n\t);\n}","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory } from 'react-router-dom';\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport images from '../images/indulge-restaurant.jpg';\nimport '../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignIn() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\t// function getCurrentUser(id) {\n\t// \tconst user = id;\n\t// \tconsole.log(\"*** USER \", user);\n\t// \treturn user;\n\t// }\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/token/`, {\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tlocalStorage.setItem('access_token', res.data.access);\n\t\t\t\tlocalStorage.setItem('refresh_token', res.data.refresh);\n\t\t\t\tlocalStorage.setItem('id', res.data.id);\n\t\t\t\tlocalStorage.setItem('user_name', res.data.user_name);\n\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t'JWT ' + localStorage.getItem('access_token');\n\t\t\t\thistory.push('/');\n\t\t\t\t// console.log(res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\t// console.log(res.data.id)\n\t\t\t\t// getCurrentUser(res.data.id)\n\t\t\t});\n\t};\n\n\tconst classes = useStyles();\n\n\t// if (localStorage.getItem('access_token')) {\n\t// \thistory.push('/homepage')\n\t// }\n\n\treturn (\n\t\t// <Container component=\"main\" maxWidth=\"xs\">\n\t\t<Container>\n\t\t\t{/* <CssBaseline /> */}\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"card-login\">\n\n\t\t\t{/* <div className={classes.paper}> */}\n\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <FormControlLabel\n\t\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t{/* </div> */}\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div className=\"landing-wrapper\"\n\t\t\tstyle={{ backgroundImage: `url(${images})`}}>\n\t\t\t</div>         */}\n\t\t\t{/* <img src={images} alt=\"Logo\" /> */}\n\t\t\t{/* <div className=\"bg\"></div> */}\n\n\t\t</Container>\n\t);\n}","import React, { useEffect } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst response = axiosInstance.post('/api/user/logout/blacklist/', {\n\t\t\trefresh_token: localStorage.getItem('refresh_token'),\n\t\t});\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('refresh_token');\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\n\t\thistory.push('/login');\n\t});\n\treturn <div>Logout</div>;\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../index.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default class Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: [],\n            random_restaurant: '',\n        };\n    }\n\n    componentDidMount() {\n        // this.retrieveRestaurants();\n        this.retrieveCities();\n    }\n    \n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        console.log(\"*&*&*&*&* \", this.state.user)\n        // const random_num = Math.floor(Math.floor()* response.data.lenth)\n        RestaurantDataService.getAll()\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(response.data)\n                console.log(\"random restaurant \", response.data[Math.floor(Math.random() * response.data.length)])\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    searchCity(event) {\n        // debugger;\n        RestaurantDataService.findByCity(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    currentRestaurant: null,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOption: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    handleChange = (event) => {\n        // debugger;\n        this.setState({ selectedOption: event.target.value }, () =>\n            console.log('Option selected: ', event)\n        )\n    }\n\n    // const classes = useStyles();\n\n\n    render() {\n        return (\n            <div className=\"app\">\n            <div className=\"card\">\n\n                <h1 className=\"heading\">{this.state.random_restaurant.name}</h1>\n                \n                <div className=\"col-md-8\">\n                <Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={useStyles.submit}\n\t\t\t\t\t\tonClick={this.retrieveRestaurants}\n\t\t\t\t\t>\n\t\t\t\t\t\tSurprise Me\n                </Button>\n                {/* <Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={useStyles.submit}\n\t\t\t\t\t\tonClick={this.retrieveCities}\n\t\t\t\t\t>\n\t\t\t\t\t\tPick by Location\n                </Button> */}\n                <br />\n                <h5>Surprise by Location</h5>\n                <div className=\"container\">\n                    <form onSubmit={this.searchCity}>\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                            value={this.state.selectedOption}\n                            onChange={this.handleChange}>\n                            {/* {citiesList} */}\n                            {this.state.cities.map((city, index) => (\n                                <option key={index} value={city.city}>{city.city}</option>\n                            ))}\n                        </select>\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                </div>\n                </div>\n                {/* <Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={useStyles.submit}\n\t\t\t\t\t\tonClick={this.retrieveCuisines}\n\t\t\t\t\t>\n\t\t\t\t\t\tPick by Cuisine\n                </Button> */}\n                {/* <button>Surprise Me</button>\n                <button>\n                    <span>Pick by Location</span>\n                </button>\n                <button>\n                    <span>Pick by Cuisine</span>\n                </button> */}\n\n            </div>\n            {/* </div> */}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport AddCuisine from \"./add-cuisine\";\nimport '../index.css';\n\n\nexport default class CuisineList extends Component {\n    constructor(props) {\n        super(props);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveCuisine = this.setActiveCuisine.bind(this);\n        // this.removeAllTutorials = this.removeAllTutorials.bind(this);\n\n        this.state = {\n            cuisines: [],\n            currentCuisine: null,\n            currentIndex: -1,\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCuisines();\n    }\n\n\n    retrieveCuisines() {\n        // axiosInstance.get()\n\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveCuisines();\n        this.setState({\n            currentCuisine: null,\n            currentIndex: -1\n        })\n    }\n\n    setActiveCuisine(cuisine, index) {\n        this.setState({\n            currentCuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    render() {\n        const { cuisines, currentCuisine, currentIndex } = this.state;\n\n        return (\n            <div className=\"bg\">\n            <div className=\"card\">\n            <div className='rowC'>\n            <div className=\"list row\">\n                <div className=\"col-md-8\">\n                    <h4>Cuisine List</h4>\n\n                    <ul className=\"list-group\">\n                        {cuisines &&\n                            cuisines.map((cuisine, index) => (\n                                <li\n                                    className={\n                                        \"list-group-item \" +\n                                        (index === currentIndex ? \"active\" : \"\")\n                                    }\n                                    onClick={() => this.setActiveCuisine(cuisine, index)}\n                                    key={index}>\n                                    {cuisine.type}\n                                </li>\n                            ))}\n                    </ul>\n\n                </div>\n                <div className=\"col-md-6\">\n                    {currentCuisine ? (\n                        <div>\n                            <h4>Cuisine</h4>\n                            <div>\n                                <label>\n                                    <strong>Type:</strong>\n                                </label>{\" \"}\n                                {currentCuisine.type}\n                            </div>\n\n                            <Link\n                                to={\"api/cuisine/\" + currentCuisine.id}\n                                className=\"badge badge-warning\">\n                                Edit\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Category...</p>\n                        </div>\n                    )}\n                </div>\n                \n            </div>\n            <AddCuisine />\n            </div>\n            </div>\n            </div>\n        );\n    }\n\n}","import './App.css';\nimport React, { Component, useState } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport images from './images/indulge-restaurant.jpg';\n\n\nimport RestaurantList from \"./components/restaurant-list.component\";\nimport AddRestaurant from \"./components/add-restaurant.component\";\nimport Restaurant from \"./components/restaurant.component\";\nimport Maps from \"./components/maps.component\";\nimport MyGoogleMap from './components/MyGoogleMap';\nimport AddCuisine from \"./components/add-cuisine\";\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport Logout from \"./components/logout\";\nimport Homepage from \"./components/homepage\"\nimport CuisineList from './components/cuisine-list';\n\n\nclass App extends Component {\n  // const [state, setState] = useState();\n\n\n  render() {\n    return (\n      <div>\n        {/* <div className=\"landing-wrapper\"\n        style={{ backgroundImage: `url(${images})`}}> */}\n        <Header />\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark justify-content-between\">\n        <div className=\"navbar-collapse collapse dual-collapse2\">\n          <a href=\"/login\" className=\"navbar-brand\">\n            WhatsToEat\n          </a>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/restaurants\"} className=\"nav-link\">\n                Restaurants\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add Restaurant\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/cuisine\"} className=\"nav-link\">\n                Cuisines\n              </Link>\n            </li>\n          </ul>\n              </div>\n          <div className=\"navbar-collapse collapse dual-collapse2\" >\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Register\n              </Link>\n            </li>\n            {/* {!localStorage.getItem('access_token') && ( */}\n\n            {/* {{(localStorage.getItem('access_token') === 'true') ?  */}\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li> \n            {/* {localStorage.getItem('access_token') && ( */}\n            <li className=\"nav-item\">\n              <Link to={\"/logout\"} className=\"nav-link\">\n                Logout\n              </Link>\n            </li> \n\n\n\n          </ul>\n        </div>\n        </nav>\n        {/* <img src={images} alt=\"Logo\" /> */}\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login/\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/restaurants\" component={RestaurantList} />\n\n            {/* <Route exact path=\"/add\" component={AddRestaurant} /> */}\n            <Route path=\"/restaurants/:id\" component={Restaurant} />\n            <div className=\"main-wrapper\">\n            {/* <Route exact path=\"/\" component={MyGoogleMap} /> */}\n            <Route exact path=\"/add\" component={MyGoogleMap} />\n            <Route path=\"/cuisine\" component={CuisineList} />\n            </div>\n          </Switch>\n          {/* <Footer /> */}\n        </div>\n        {/* </div> */}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}