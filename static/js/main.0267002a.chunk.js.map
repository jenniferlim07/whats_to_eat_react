{"version":3,"sources":["axios.js","services/restaurant.service.js","components/restaurant-list.component.js","components/restaurant.component.js","components/Autocomplete.js","components/Marker.js","components/MyGoogleMap.js","images/my_logo.jpg","components/navigation.js","components/homepage.js","components/header.js","components/register.js","components/login.js","components/logout.js","components/cuisine-list.js","components/cuisine.js","components/add-cuisine.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","axiosInstance","axios","create","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","id","catch","err","get","put","delete","city","RestaurantList","props","handleChange","event","setState","selectedOption","target","value","onChangeSearchCity","bind","retrieveRestaurants","refreshList","setActiveRestaurant","searchCity","retrieveCities","state","user","restaurants","currentRestaurant","currentIndex","cities","this","e","RestaurantDataService","getAll","restaurant","index","findByCity","preventDefault","getAllCities","className","onSubmit","aria-label","onChange","map","type","onClick","name","website","address","cuisine","to","Component","Restaurant","onChangeName","onChangeWebsite","onChangeAddress","onChangeCity","getRestaurant","updateRestaurant","deleteRestaurant","retrieveCuisines","setCuisine","cuisines","message","match","params","prevState","update","history","push","getAllCuisines","htmlFor","Wrapper","styled","div","AutoComplete","onPlaceChanged","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","searchInput","blur","clearSearchBox","mapApi","options","fields","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","placeholder","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","restaurant_name","center","zoom","draggable","lat","lng","submitted","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","getCity","addressArray","i","length","j","long_name","getState","saveRestaurant","newRestaurant","Geocoder","geocode","results","address_components","formatted_address","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","key","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","bordered","Item","label","Navigation","useLocation","class","pathname","Homepage","handleChangeCity","selectedOptionCity","handleChangeCuisine","selectedOptionCuisine","onChangeSearchCuisine","searchCuisine","random_restaurant","floor","random","parseInt","getRestaurants","Button","fullWidth","variant","color","useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","link","margin","spacing","toolbarTitle","flexGrow","Header","classes","Fragment","CssBaseline","AppBar","position","elevation","Toolbar","toolbar","Typography","noWrap","Link","component","NavLink","underline","src","images","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","secondary","form","width","submit","SignUp","useHistory","initialFormData","Object","freeze","email","user_name","password","useState","formData","updateFormData","trim","Container","maxWidth","Avatar","noValidate","Grid","container","item","xs","TextField","required","res","justify","SignIn","autoFocus","stringify","useEffect","refresh_token","removeItem","CuisineList","currentResIndex","Cuisine","onChangeType","getCuisine","deleteCuisine","currentCuisine","AddCuisine","saveCuisine","newCuisine","setActiveCuisine","createCuisine","App","exact","path","Register","Login","Logout","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0267002a.chunk.js","sourcesContent":["import axios from 'axios';\n\n// const baseURL = 'http://127.0.0.1:8080/';\nconst baseURL = 'https://whatstoeat-backend.herokuapp.com/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\t// timeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'JWT ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n\t\t\talert(\n\t\t\t\t'A server/network error occurred. ' +\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\n\t\t\t);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + '/api/token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('api/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\t\t\t\t\t\t\t// localStorage.setItem('id', response.data.id)\n\t\t\t\t\t\t\t// localStorage.setItem('user_name', response.data.user_name)\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\tconsole.log(\"front user \", response.data.id)\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;","// import http from \"../http-common\";\nimport axiosInstance from '../axios';\n\nclass RestaurantDataService {\n    getAll() {\n        // return http.get(\"/restaurants\");\n        return axiosInstance.get(\"/api/restaurant/\")\n    }\n\n    get(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`/restaurants/${id}`);\n    }\n\n    create(data) {\n        // return http.post(\"/restaurants\", data);\n        return axiosInstance.post(\"/restaurants\", data);\n    }\n\n    update(id, data) {\n        // return http.put(`/restaurants/${id}`, data);\n        return axiosInstance.put(`/restaurants/${id}`, data);\n    }\n\n    delete(id) {\n        // return http.delete(`/restaurants/${id}`);\n        return axiosInstance.delete(`/restaurants/${id}`);\n    }\n\n    // deleteAll() {\n    //     return http.delete(\"/restaurants\");\n    // }\n    findByCity(city) {\n        // return http.get(`/restaurants?city=${city}`);\n        return axiosInstance.get(`/restaurants?city=${city}`);\n    }\n\n    getAllCities() {\n        // return http.get(\"/restaurants/city\")\n        return axiosInstance.get(\"/restaurants/city\")\n    }\n\n    createCuisine(data) {\n        return axiosInstance.post('/api/cuisine/', data)\n    }\n\n    getAllCuisines() {\n        // return http.get(\"/tutorial\");\n        // return axiosInstance.get(\"/api/cuisine/\")\n        return axiosInstance.get(\"/cuisines\")\n    }\n\n    // updateCuisine(id, data) {\n    //     // return http.put(`/tutorial/${id}`, data);\n    //     return axiosInstance.put(`/cuisines/${id}`, data)\n    // }\n\n    getCuisine(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`api/cuisine/${id}`);\n    }\n\n    getRestaurants(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`/cuisines/${id}`);\n    }\n\n    deleteCuisine(id) {\n        // return http.delete(`/restaurants/${id}`);\n        return axiosInstance.delete(`/cuisines/${id}`);\n    }\n}\n\nexport default new RestaurantDataService();","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\n// import Select from 'react-select';\n\nexport default class RestaurantList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveRestaurant = this.setActiveRestaurant.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: []\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRestaurants();\n        this.retrieveCities();\n    }\n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        RestaurantDataService.getAll()\n\n            .then(response => {\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveRestaurants();\n        this.setState({\n            currentRestaurant: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveRestaurant(restaurant, index) {\n        this.setState({\n            currentRestaurant: restaurant,\n            currentIndex: index\n        });\n    }\n\n    searchCity(event) {\n        RestaurantDataService.findByCity(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    currentRestaurant: null\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOption: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({ selectedOption: event.target.value }, () =>\n            console.log('Option selected: ', event)\n        )\n    }\n\n    render() {\n        const { restaurants, currentRestaurant, currentIndex } = this.state;\n\n        return (\n            <div className=\"bg\">\n                <div className=\"card\">\n                    <div className=\"col-md-8\">\n                        <h5>Restaurants by City</h5>\n                        <div className=\"container\">\n\n                            <form onSubmit={this.searchCity}>\n                                {/* <Select\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}\n                                    options={\n                                    this.state.cities.map((city, index) => {\n                                        return {\n                                            label: city.city,\n                                            value: city\n                                            // key: index\n                                        }\n                                    })\n                                }\n                                /> */}\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}>\n                                    {this.state.cities.map((city, index) => (                                      \n                                        <option key={index} value={city.city}>{city.city}</option>\n                                    ))}\n                                </select>\n                                    \n                                {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8\">\n                        <h4>Restaurant List</h4>\n                        <ul className=\"list-group\">\n                            {restaurants &&\n                                restaurants.map((restaurant, index) => (\n                                    <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentIndex ? \"active\" : \"\")\n                                        }\n                                        onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                        key={index}>\n                                        {restaurant.name}\n                                    </li>\n                                ))}\n                        </ul>\n                    </div>\n\n                    <div className=\"col=md-6\">\n                        {currentRestaurant ? (\n                            <div>\n                                <h4>Restaurant</h4>\n                                <div>\n                                    <label>\n                                        <strong>Name:</strong>\n                                    </label>{\" \"}\n                                    {currentRestaurant.name}\n                                </div>\n                                <div>\n                                    <label>\n                                        <strong>Website:</strong>\n                                    </label>{\" \"}\n                                    <a target='_blank' href={currentRestaurant.website}>{currentRestaurant.website}</a>\n                                    \n                                </div>\n                                <div>\n                                    <label>\n                                        <strong>Address:</strong>\n                                    </label>{\" \"}\n                                    {currentRestaurant.address}\n                                </div>\n\n                                <ul>\n                                    <label>\n                                        <strong>Cuisines:</strong>\n                                    </label>\n                                    {/* {currentTutorial.category} */}\n                                    {currentRestaurant.cuisine.map((cuisine) => {\n                                        return <li key={cuisine.id}>{cuisine.type}</li>\n                                    })}\n                                </ul>\n                                <Link\n                                    to={\"/restaurants/\" + currentRestaurant.id}\n                                    className=\"btn btn-outline-primary btn-sm\">\n                                    Edit\n                                </Link>\n                            </div>\n                        ) : (\n                            <div>\n                                <br />\n                                <p>Please click on a Restaurant...</p>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport '../index.css';\n\nexport default class Restaurant extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeWebsite = this.onChangeWebsite.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.getRestaurant = this.getRestaurant.bind(this);\n        this.updateRestaurant = this.updateRestaurant.bind(this);\n        this.deleteRestaurant = this.deleteRestaurant.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setCuisine = this.setCuisine.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentRestaurant: {\n                id: null,\n                name: \"\",\n                website: \"\",\n                address: \"\",\n                city: \"\",\n                cuisine: '',\n            },\n            cuisines: [],\n\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getRestaurant(this.props.match.params.id);\n        this.retrieveCuisines();\n    }\n\n    onChangeName(e) {\n        const name = e.target.value;\n\n        this.setState(prevState => ({\n                currentRestaurant: {\n                    ...prevState.currentRestaurant,\n                    name: name\n            }\n        }));\n    }\n\n    onChangeWebsite(e) {\n        const website = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                website: website\n            }\n        }));\n    }\n\n    onChangeAddress(e) {\n        const address = e.target.value\n        \n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                address: address\n            }\n        }));\n    }\n\n    onChangeCity(e) {\n        const city = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                city: city\n            }\n        }));\n    }\n\n    getRestaurant(id) {\n        RestaurantDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentRestaurant: response.data\n                });\n                console.log(\"get restaurant \", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateRestaurant() {\n        RestaurantDataService.update(\n            this.state.currentRestaurant.id, \n            this.state.currentRestaurant\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The restaurant was update successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteRestaurant() {\n        RestaurantDataService.delete(this.state.currentRestaurant.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/api/restaurants\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieve cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setCuisine(cuisine, index) {\n        console.log(\"set cuisine \", cuisine)\n        this.setState({\n            cuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    handleChange(event) {\n        const data = {\n            id: this.state.currentRestaurant.id,\n            name: this.state.currentRestaurant.name,\n            website: this.state.currentRestaurant.website,\n            address: this.state.currentRestaurant.address,\n            city: this.state.currentRestaurant.city,\n\n            cuisine: event.target.value\n        };\n        console.log(\"event target \", event.target.value)\n\n        this.setState({\n            currentRestaurant: data\n        })\n\n        event.preventDefault();\n    }\n\n    render() {\n        const { currentRestaurant } = this.state\n\n        return (\n            <div className=\"ad\">\n                <div className=\"card\">\n                    {currentRestaurant ? (\n                        <div className=\"edit-form\">\n                            <h4>Restaurant</h4>\n                            <form>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Name</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"name\"\n                                        value={currentRestaurant.name}\n                                        onChange={this.onChangeName}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"website\">Website</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"website\"\n                                        value={currentRestaurant.website}\n                                        onChange={this.onChangeWebsite}\n                                        name=\"website\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"address\">Address</label>\n                                    <input \n                                        type=\"address\"\n                                        className=\"form-control\"\n                                        id=\"address\"\n                                        value={currentRestaurant.address}\n                                        onChange={this.onChangeAddress}\n                                        // name=\"address\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"city\">City</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"city\"\n                                        value={currentRestaurant.city}\n                                        onChange={this.onChangeCity}\n                                        name=\"city\"\n                                    />\n                                </div>\n                            </form>\n\n                            <div className=\"container\">\n                                <label htmlFor=\"city\">Add Cuisine</label>\n                                    <form >\n                                        <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                            value={this.state.cuisine}\n                                            onChange={this.handleChange}>\n                                            {this.state.cuisines.map((cuisine) => (\n                                                <option key={cuisine.id} value={cuisine.id}>{cuisine.type}</option>\n                                            ))}\n                                        </select>\n                                    </form>\n                            </div>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-outline-primary btn-sm\"\n                                onClick={this.updateRestaurant}>\n                                Update\n                            </button>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-outline-primary btn-sm\"\n                                onClick={this.deleteRestaurant}>\n                                Delete\n                            </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Click on a Restaurant</p>\n                    </div>\n                )}\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    padding: 20px;\n    text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            fields: [\"name\", \"url\", \"website\", \"address_components\", \"geometry\"],\n            types: ['establishment'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n        console.log(\"place \", place)\n        console.log(\"contact \", place.website)\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;","import React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\n\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nimport { Descriptions } from 'antd';\nimport RestaurantDataService from \"../services/restaurant.service\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY\nconst Wrapper = styled.main`\n    width: 100%;\n    height: 100%;\n`;\n\n\nclass MyGoogleMap extends Component {\n    constructor(props) {\n        super(props)\n        this.saveRestaurant = this.saveRestaurant.bind(this)\n        this.newRestaurant = this.newRestaurant.bind(this)\n\n    }\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        user: localStorage.getItem('id'),\n        places: [],\n        restaurant_name: '',\n        website: '',\n        center: [],\n        zoom: 9,\n        address: '',\n        city: '',\n        state: '',\n        draggable: true,\n        lat: null,\n        lng: null,\n\n        submitted: false\n    };\n\n    componentWillMount() {\n        // this.setCurrentLocation();\n        this.setState({\n            center: [47.608013, -122.335167],\n            lat: 47.608013,\n            lng: -122.335167,\n        })\n    }\n\n    saveRestaurant() {\n        const data = {\n            user: this.state.user,\n            name: this.state.restaurant_name,\n            website: this.state.website,\n            address: this.state.address,\n            city: this.state.city\n        };\n        // this.autoComplete = new mapApi.places.Autocomplete(\n        //     this.state.address,\n        // );\n\n        // const auto = this.autoComplete.getPlace()\n        console.log(\"potato \", data)\n\n        RestaurantDataService.create(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    name: response.data.name, \n                    website: response.data.website,\n                    address: response.data.address,\n                    city: response.data.city,\n                    user: this.state.user,\n\n                    submitted: true\n                    \n                });\n                console.log(\"saveRestaurant \", this.state.submitted)\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newRestaurant() {\n        this.setState({\n            id: null,\n            user: this.state.user,\n            name: \"\",\n            website: \"\",\n            address: \"\",\n            city: \"\",\n\n            submitted: false\n        });\n        console.log(\"newRestaurant \", this.submitted)\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        console.log(\"addPlace \", place)\n        this.setState({\n            places: [place],\n            restaurant_name: place.name,\n            website: place.website,\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        city = addressArray[i].long_name;\n                        return city;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    const addressArray = results[0].address_components\n                    const city = this.getCity(addressArray)\n                    const state = this.getState(addressArray)\n                    this.setState({ \n                        address: results[0].formatted_address,\n                        city: city,\n                        state: state});\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    // setCurrentLocation() {\n    //     if ('geolocation' in navigator) {\n    //         navigator.geolocation.getCurrentPosition((position) => {\n    //             this.setState({\n    //                 center: [position.coords.latitude, position.coords.longitude],\n    //                 lat: position.coords.latitude,\n    //                 lng: position.coords.longitude\n    //             });\n    //         });\n    //     }\n    // }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n                {mapApiLoaded && (\n                    <div>\n                        <h4 className=\"text-center\">Restaurant Search</h4>\n                        <AutoComplete className=\"auto-complete\" map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: `${API_KEY}`,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                <div className=\"descriptions\">\n                    <Descriptions bordered>\n                        <Descriptions.Item label=\"Restaurant\">{this.state.restaurant_name}</Descriptions.Item>\n                        <br />\n                        <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n                <div className=\"submit-form\">\n                    {this.state.submitted ? (\n                        <div>\n                            <h4>You submitted successfully!</h4>\n                            <button className=\"btn btn-success\" onClick={this.newRestaurant}>\n                                Add\n                            </button>\n                        </div>\n                    ) : (\n                        <div>\n                        <button onClick={this.saveRestaurant} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                        </div>\n                    )}\n\n                </div>\n            </Wrapper >\n\n        );\n    }\n}\n\nexport default MyGoogleMap;","export default __webpack_public_path__ + \"static/media/my_logo.a73b85aa.jpg\";","import React from \"react\";\nimport {NavLink, useLocation } from \"react-router-dom\";\n// import Login from './login';\n// import Logout from './logout';\n\nfunction Navigation(props) {\n    const location = useLocation();\n\n    if (!localStorage.getItem('access_token')) {\n        return (\n            <div className=\"navigation\">\n                <nav id=\"topnav\" className=\"navbar navbar-expand navbar-light\">\n                    <div className=\"container\">\n                        <div>\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className={`nav-item ${\n                                    window.location.pathname === \"/login\" ? \"active\" : \"\"\n                                }`}\n                                >\n                                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/login\"}>\n                                    Login\n                                </NavLink>\n                                \n                                </li>\n                                <li class={`nav-item ${\n                                    window.location.pathname === \"/register\" ? \"active\" : \"\"\n                                }`}\n                                >\n                                    <NavLink  className=\"nav-link h5 link-secondary\" to=\"/register\">\n                                        Register\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav> \n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"navigation\">\n                <nav id=\"topnav\" className=\"navbar navbar-expand navbar-light\">\n                    <div className=\"container\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li class={`nav-item ${\n                                window.location.pathname === \"/login\" ? \"active\" : \"\"\n                            }`}\n                            >\n                                <NavLink className=\"nav-link h5 link-secondary\" to={\"/logout\"}>\n                                    Logout\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n\n        )\n    }\n\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport Button from '@material-ui/core/Button';\n// import { makeStyles } from '@material-ui/core/styles';\nimport '../index.css';\n\n\nexport default class Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.handleChangeCity = this.handleChangeCity.bind(this);\n        this.handleChangeCuisine = this.handleChangeCuisine.bind(this);\n        this.onChangeSearchCuisine = this.onChangeSearchCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.searchCuisine = this.searchCuisine.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: [],\n            random_restaurant: '',\n            cuisines: [],\n            searchCuisine: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCities();\n        this.retrieveCuisines();\n    }\n    \n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        RestaurantDataService.getAll()\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    searchCity(event) {\n        RestaurantDataService.findByCity(this.state.selectedOptionCity)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOptionCity: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    handleChangeCity = (event) => {\n        this.setState({ selectedOptionCity: event.target.value }, () =>\n            console.log('Option selected City: ', event)\n        )\n    }\n\n    handleChangeCuisine = (event) => {\n        this.setState({ selectedOptionCuisine: event.target.value }, () =>\n            console.log('Option selected Cuisine: ', event)\n        )\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n                this.setState({\n                    cuisines: response.data,\n                    selectedOptionCuisine: response.data[0].id,\n                });\n                console.log(\"cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n    onChangeSearchCuisine(e) {\n        const searchCuisine = e.target.value;\n\n        this.setState({\n            searchCuisine: searchCuisine\n        });\n    }\n    searchCuisine(event) {\n        const index = parseInt(this.state.selectedOptionCuisine) + 1\n        RestaurantDataService.getRestaurants(index)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            })\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"hm-card\">        \n                    <h1 className=\"heading\">\n                        <a target='_blank' href={this.state.random_restaurant.website}>\n                            {this.state.random_restaurant.name}\n                        </a>   \n                    </h1>\n                \n                    <div className=\"col-md-8\">\n                        <Button\n                                // className=\"submitBtn\"\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                // className={useStyles.submit}\n                                onClick={this.retrieveRestaurants}\n                            >\n                                Surprise Me\n                        </Button>\n                        <br />\n                        <br />\n\n                        <h5>Surprise by Location</h5>\n                        <div className=\"container\">\n                            <form onSubmit={this.searchCity}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOptionCity}\n                                    onChange={this.handleChangeCity}>\n                                    {this.state.cities.map((city, index) => (\n                                        <option key={index} value={city.city}>{city.city}</option>\n                                    ))}\n                                </select>\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n\n                        <h5>Surprise by Cuisine</h5>\n                        <div className=\"container\">\n                            <form onSubmit={this.searchCuisine}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOptionCuisine}\n                                    onChange={this.handleChangeCuisine}>\n                                    {this.state.cuisines.map((cuisine, index) => (\n                                        <option key={index} value={index}>{cuisine.type}</option>\n                                    ))}\n                                </select>\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>                         \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n// import Button from '@material-ui/core/Button';\nimport images from '../images/my_logo.jpg';\nimport Navigation from './navigation';\nimport Homepage from './homepage';\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t\t// alignItems: 'center',\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\ttoolbarTitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n\nfunction Header() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\televation={0}\n\t\t\t\tclassName={classes.appBar}>\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.toolbarTitle}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\tunderline=\"none\"\n\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\tclassName=\"nav-link h5 link-secondary\">\n\t\t\t\t\t\t\t<img src={images} alt=\"Logo\" />\n\t\t\t\t\t\t</Link>\t\t\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Navigation />\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory, Link } from 'react-router-dom';\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\temail: '',\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t// Trimming any whitespace\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/user/register/`, {\n\t\t\t\temail: formData.email,\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\thistory.push('/login');\n\t\t\t\tconsole.log(res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"card-login\">\n\t\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" to=\"/login\">\n\t\t\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Container>\n\t);\n}","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory, Link } from 'react-router-dom';\n\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport '../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignIn() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/token/`, {\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tlocalStorage.setItem('access_token', res.data.access);\n\t\t\t\tlocalStorage.setItem('refresh_token', res.data.refresh);\n\t\t\t\tlocalStorage.setItem('id', res.data.id);\n\t\t\t\tlocalStorage.setItem('user_name', res.data.user_name);\n\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.data));\n\n\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t'JWT ' + localStorage.getItem('access_token');\n\t\t\t\thistory.push('/whats_to_eat_react');\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container>\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"card-login\">\n\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" to=\"/register\">\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Container>\n\t);\n}","import React, { useEffect } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\taxiosInstance.post('/api/user/logout/blacklist/', {\n\t\t\trefresh_token: localStorage.getItem('refresh_token'),\n\t\t});\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('refresh_token');\n\n\n\t\tlocalStorage.removeItem('id');\n\t\tlocalStorage.removeItem('user_name');\n\t\tlocalStorage.removeItem(\"user\");\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\n\t\thistory.push('/login');\n\t});\n\n\treturn <div>Logout</div>;\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\n// import { Link } from \"react-router-dom\";\n// import AddCuisine from \"./add-cuisine\";\nimport '../index.css';\n\n\nexport default class CuisineList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCuisine = this.onChangeSearchCuisine.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.searchCuisine = this.searchCuisine.bind(this);\n        // this.refreshList = this.refreshList.bind(this);\n        this.setActiveRestaurant = this.setActiveRestaurant.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            cuisines: [],\n            currentRestaurant: null,\n            currentResIndex: -1,\n            searchCuisine: \"\",\n            restaurants: [],\n            // selectedOption: '',\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCuisines();\n        this.retrieveRestaurants();\n        // this.refreshList();\n    }\n\n    onChangeSearchCuisine(e) {\n        const searchCuisine = e.target.value;\n\n        this.setState({\n            searchCuisine: searchCuisine\n        });\n    }\n\n    retrieveRestaurants() {\n        RestaurantDataService.getAll()\n\n            .then(response => {\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data,\n                    selectedOption: response.data[0].id,\n                });\n                console.log(\"retrieveCuisines \", response.data);\n                // console.log(this.state.cuisines)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveRestaurant(restaurant, index) {\n        this.setState({\n            currentRestaurant: restaurant,\n            currentResIndex: index\n        })\n    }\n\n    searchCuisine(event) {\n        const index = parseInt(this.state.selectedOption) + 1\n        RestaurantDataService.getRestaurants(index)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    currentRestaurant: null\n                });\n                console.log(\"cuisine restaurant data \", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            })\n        event.preventDefault();\n    }\n\n    handleChange = (event) => {\n        this.setState({ selectedOption: event.target.value}, () =>\n            console.log('Option selected: ', event.target.value)\n        )\n    }\n\n    render() {\n        const { cuisines, restaurants, currentRestaurant, currentResIndex} = this.state;\n\n        return (\n            <div className=\"bg\">\n                <div className=\"card\">\n                    <div className=\"col-md-8\">\n                        <h5>Restaurants by Cuisine</h5>\n                        <div className=\"container\">\n                            <form onSubmit={this.searchCuisine}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}>\n                                    {this.state.cuisines.map((cuisine, index) => (\n                                        <option key={index} value={index}>{cuisine.type}</option>\n                                    ))}\n                                </select>                                \n                                {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8\">\n                        <h4>Restaurant List</h4>\n                        <ul className=\"list-group\">\n                            {this.state.restaurants &&\n                                restaurants.map((restaurant, index) => (\n                                    <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentResIndex ? \"active\" : \"\")\n                                        }\n                                        onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                        key={index}>\n                                        {restaurant.name}\n                                    </li>\n                                ))}\n                        </ul>\n                    </div>\n\n                    <div className=\"col-md-6\">\n                        {currentRestaurant ? (\n                            <div>\n                                <h4>Restaurant</h4>\n                                <div>\n                                    <label>\n                                        <strong>Name:</strong>\n                                    </label>{\" \"}\n                                    {currentRestaurant.name}\n                                </div>\n                                <div>\n                                    <label>\n                                        <strong>Website:</strong>\n                                    </label>{\" \"}\n                                    <a target='_blank' href={currentRestaurant.website}>{currentRestaurant.website}</a>\n                                    \n                                </div>\n                                <div>\n                                    <label>\n                                        <strong>Address:</strong>\n                                    </label>{\" \"}\n                                    {currentRestaurant.address}\n                                </div>\n                            </div>\n                        ) : (\n                            <div>\n                                <br />\n                                <p>Please click on a Category...</p>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport '../index.css';\n\nexport default class Cuisine extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.getCuisine = this.getCuisine.bind(this);\n        // this.updateCuisine = this.updateCuisine.bind(this);\n        this.deleteCuisine = this.deleteCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setCuisine = this.setCuisine.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentCuisine: {\n                id: null,\n                type: \"\",                \n            },\n            restaurants: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCuisine(this.props.match.params.id);\n        this.retrieveCuisines();\n    }\n\n    onChangeType(e) {\n        const type = e.target.value;\n\n        this.setState(prevState => ({\n                currentCuisine: {\n                    ...prevState.currentCuisine,\n                    type: type\n            }\n        }));\n    }\n\n    getCuisine(id) {\n        RestaurantDataService.getCuisine(id)\n            .then(response => {\n                this.setState({\n                    currentCuisine: response.data,\n                    \n                });\n                console.log(this.state.restaurants)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteCuisine() {\n        RestaurantDataService.deleteCuisine(this.state.currentCuisine.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/addcuisine\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieve cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setCuisine(cuisine, index) {\n        console.log(\"set cuisine \", cuisine)\n        this.setState({\n            cuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    render() {\n        const { currentCuisine } = this.state\n\n        return (\n            <div className=\"ad\">\n                <div className=\"card\">\n                    {currentCuisine ? (\n                        <div className=\"edit-form\">\n                            <h4>Cuisine</h4>\n                            <form>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Type</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"name\"\n                                        value={currentCuisine.type}\n                                        onChange={this.onChangeType}\n                                    />\n                                </div>\n                            </form>\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-outline-primary btn-sm\"\n                                onClick={this.deleteCuisine}>\n                                Delete\n                            </button>\n                            <p>{this.state.message}</p>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Click on a Restaurant</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport '../index.css';\n\nexport default class AddCuisine extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.saveCuisine = this.saveCuisine.bind(this);\n        this.newCuisine = this.newCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setActiveCuisine = this.setActiveCuisine.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n\n        this.state = {\n            cuisines: [],\n            id: null,\n            type: \"\",\n            currentCuisine: null,\n            currentIndex: -1,\n            user: localStorage.getItem('id'),\n\n            submitted: false\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCuisines();\n        this.refreshList();\n    }\n\n    onChangeType(e) {\n        this.setState({\n            type: e.target.value\n        });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieveCuisines \", response.data);\n                console.log(this.state.cuisines)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveCuisine(cuisine, index) {\n        this.setState({\n            currentCuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    saveCuisine() {\n        const data = {\n            user: this.state.user,\n            type: this.state.type\n        };\n\n        RestaurantDataService.createCuisine(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    type: response.data.type,\n                    user: this.state.user,\n\n                    submitted: true\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        this.refreshList();\n    }\n\n    newCuisine() {\n        this.setState({\n            id: null,\n            type: \"\",\n            user: this.state.user,\n\n            submitted: false\n        });\n        console.log(\"new submitted \", this.state.submitted)\n    }\n    \n    deleteCuisine() {\n        const index = parseInt(this.state.currentCuisine.id) + 1\n        console.log(\"index \", index)\n        RestaurantDataService.delete(index)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/cuisine\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveCuisines();\n        this.setState({\n            currentCuisine: null,\n            currentIndex: -1\n        });\n    }\n\n    render() {\n        const { cuisines, currentCuisine, currentIndex } = this.state;\n        \n        return (\n            <div className=\"bg\">\n                <div className=\"card\">\n                    <div className=\"submit-form\">\n                        <h5>Add Cuisine Type</h5>\n                        {this.state.submitted ? (\n                            <div>\n                                <h4>You submitted successfully!</h4>\n                                <button className=\"btn btn-success\" onClick={this.newCuisine}>\n                                    Add\n                                </button>\n                            </div>\n                        ) : (\n                            <div>\n                                <div className=\"form-group\">\n                                    {/* <label htmlFor=\"title\">Type</label> */}\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"type\"\n                                        required\n                                        value={this.state.type}\n                                        onChange={this.onChangeType}\n                                        name=\"type\"\n                                    />\n                                </div>\n\n                                <button onClick={this.saveCuisine} className=\"btn btn-success\">\n                                    Submit\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h4>Cuisine List</h4>\n\n                        <ul className=\"list-group\">\n                            {this.state.cuisines &&\n                                cuisines.map((cuisine, index) => (\n                                    <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentIndex ? \"active\" : \"\")\n                                        }\n                                        onClick={() => this.setActiveCuisine(cuisine, index)}\n                                        key={index}>\n                                        {cuisine.type}\n                                    </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div className=\"col-md-8\">\n                        {currentCuisine ? (\n                            <div>\n                                <h4>Cuisine</h4>\n                                <div>\n                                    <label>\n                                        <strong>Type:</strong>\n                                    </label>{\" \"}\n                                    {currentCuisine.type}\n                                </div>\n                                <Link\n                                    to={\"/cuisines/\" + currentCuisine.id}\n                                    className=\"btn btn-outline-primary btn-sm\">\n                                    Edit\n                                </Link>\n                            </div>\n                        ) : (\n                            <div>\n                                <br />\n                                <p>Please click on a Category...</p>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}","import './App.css';\nimport React, { Component } from \"react\";\nimport { Route, Switch, NavLink} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport RestaurantList from \"./components/restaurant-list.component\";\nimport Restaurant from \"./components/restaurant.component\";\nimport MyGoogleMap from './components/MyGoogleMap';\n\nimport Header from \"./components/header\";\n// import Footer from \"./components/footer\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport Logout from \"./components/logout\";\nimport Homepage from \"./components/homepage\"\nimport CuisineList from './components/cuisine-list';\nimport Cuisine from './components/cuisine';\nimport AddCuisine from './components/add-cuisine';\n// import Navigation from './components/navigation';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"nav justify-content-center\" id=\"navigation\">\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"api/restaurants/\"}>\n                  <span className=\"ml-2\">Restaurants</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/add\"}>\n                  <span className=\"ml-2\">Add Restaurant</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/cuisine\"}>\n                  <span className=\"ml-auto\">Cuisines</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/addcuisine\"}>\n                  <span className=\"ml-auto\">Add Cuisines</span>\n                </NavLink>\n              </li>\n            </ul>\n            {/* <Navigation /> */}\n          </nav>\n\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login/\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n\n            <Route path=\"/api/restaurants/\" component={RestaurantList} />\n            <Route path=\"/restaurants/:id\" component={Restaurant} />\n            <Route path=\"/cuisine\" component={CuisineList} />\n            <Route path=\"/cuisines/:id\" component={Cuisine} />\n            <Route path=\"/addcuisine\" component={AddCuisine} />\n\n            <div className=\"main-wrapper\">\n              <Route exact path=\"/add\" component={MyGoogleMap} />\n            </div>\n\n            \n          </Switch>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  // <BrowserRouter>\n  //   <App />\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}