{"version":3,"sources":["images/my_logo.jpg","axios.js","services/restaurant.service.js","components/restaurant-list.component.js","components/restaurant.component.js","components/Autocomplete.js","components/Marker.js","components/MyGoogleMap.js","components/header.js","components/footer.js","components/register.js","components/login.js","components/logout.js","components/homepage.js","components/add-cuisine.js","components/cuisine-list.js","components/cuisine.js","components/navigation.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","axiosInstance","axios","create","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","a","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","id","catch","err","get","put","delete","city","RestaurantList","props","handleChange","event","setState","selectedOption","target","value","onChangeSearchCity","bind","retrieveRestaurants","refreshList","setActiveRestaurant","searchCity","retrieveCities","state","user","restaurants","currentRestaurant","currentIndex","cities","this","e","RestaurantDataService","getAll","restaurant","index","findByCity","preventDefault","getAllCities","className","onSubmit","aria-label","onChange","map","type","onClick","name","website","address","cuisine","to","Component","Restaurant","onChangeName","onChangeWebsite","onChangeAddress","onChangeCity","getRestaurant","updateRestaurant","deleteRestaurant","retrieveCuisines","setCuisine","cuisines","message","match","params","prevState","update","history","push","getAllCuisines","htmlFor","Wrapper","styled","div","AutoComplete","onPlaceChanged","addplace","place","autoComplete","getPlace","geometry","viewport","fitBounds","setCenter","setZoom","searchInput","blur","clearSearchBox","mapApi","options","fields","types","places","Autocomplete","addListener","bindTo","clearInstanceListeners","ref","onFocus","placeholder","Marker","text","alt","defaultProps","main","MyGoogleMap","mapApiLoaded","mapInstance","geoCoder","restaurant_name","center","zoom","draggable","lat","lng","submitted","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_generateAddress","_onChange","_onClick","apiHasLoaded","maps","addPlace","getCity","addressArray","i","length","j","long_name","getState","saveRestaurant","newRestaurant","Geocoder","geocode","results","address_components","formatted_address","onChildMouseDown","onChildMouseUp","onChildMouseMove","onChildClick","bootstrapURLKeys","key","process","libraries","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","bordered","Item","label","useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","link","margin","spacing","toolbarTitle","flexGrow","Header","classes","Fragment","CssBaseline","AppBar","position","color","elevation","Toolbar","toolbar","Typography","variant","noWrap","Link","component","NavLink","underline","src","images","ul","padding","listStyle","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","Footer","paper","display","flexDirection","alignItems","avatar","backgroundColor","secondary","form","width","submit","SignUp","useHistory","initialFormData","Object","freeze","email","user_name","password","useState","formData","updateFormData","trim","Container","maxWidth","Avatar","noValidate","Grid","container","item","xs","TextField","required","fullWidth","Button","res","justify","SignIn","autoFocus","stringify","useEffect","refresh_token","removeItem","Homepage","onChangeSearchCuisine","searchCuisine","random_restaurant","floor","random","parseInt","getRestaurants","AddCuisine","onChangeType","saveCuisine","newCuisine","setActiveCuisine","currentCuisine","createCuisine","CuisineList","currentResIndex","Cuisine","getCuisine","deleteCuisine","Navigation","useLocation","class","pathname","App","path","Register","Login","Logout","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ca4a156.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/my_logo.a73b85aa.jpg\";","import axios from 'axios';\n\n// const baseURL = 'http://127.0.0.1:8080/';\nconst baseURL = 'https://whatstoeat-backend.herokuapp.com/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\t// timeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'JWT ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n\t\t\talert(\n\t\t\t\t'A server/network error occurred. ' +\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\n\t\t\t);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + '/api/token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('api/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\t\t\t\t\t\t\t// localStorage.setItem('id', response.data.id)\n\t\t\t\t\t\t\t// localStorage.setItem('user_name', response.data.user_name)\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\tconsole.log(\"front user \", response.data.id)\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;","// import http from \"../http-common\";\nimport axiosInstance from '../axios';\n\nclass RestaurantDataService {\n    getAll() {\n        // return http.get(\"/restaurants\");\n        return axiosInstance.get(\"/restaurants\")\n    }\n\n    get(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`/restaurants/${id}`);\n    }\n\n    create(data) {\n        // return http.post(\"/restaurants\", data);\n        return axiosInstance.post(\"/restaurants\", data);\n    }\n\n    update(id, data) {\n        // return http.put(`/restaurants/${id}`, data);\n        return axiosInstance.put(`/restaurants/${id}`, data);\n    }\n\n    delete(id) {\n        // return http.delete(`/restaurants/${id}`);\n        return axiosInstance.delete(`/restaurants/${id}`);\n    }\n\n    // deleteAll() {\n    //     return http.delete(\"/restaurants\");\n    // }\n    findByCity(city) {\n        // return http.get(`/restaurants?city=${city}`);\n        return axiosInstance.get(`/restaurants?city=${city}`);\n    }\n\n    getAllCities() {\n        // return http.get(\"/restaurants/city\")\n        return axiosInstance.get(\"/restaurants/city\")\n    }\n\n    createCuisine(data) {\n        return axiosInstance.post('/api/cuisine/', data)\n    }\n\n    getAllCuisines() {\n        // return http.get(\"/tutorial\");\n        // return axiosInstance.get(\"/api/cuisine/\")\n        return axiosInstance.get(\"/cuisines\")\n    }\n\n    // updateCuisine(id, data) {\n    //     // return http.put(`/tutorial/${id}`, data);\n    //     return axiosInstance.put(`/cuisines/${id}`, data)\n    // }\n\n    getCuisine(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`api/cuisine/${id}`);\n    }\n\n    getRestaurants(id) {\n        // return http.get(`/restaurants/${id}`);\n        return axiosInstance.get(`/cuisines/${id}`);\n    }\n\n    deleteCuisine(id) {\n        // return http.delete(`/restaurants/${id}`);\n        return axiosInstance.delete(`/cuisines/${id}`);\n    }\n}\n\nexport default new RestaurantDataService();","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\n// import Select from 'react-select';\n// import images from '../images/indulge-restaurant.jpg';\n\nexport default class RestaurantList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveRestaurant = this.setActiveRestaurant.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: []\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveRestaurants();\n        this.retrieveCities();\n    }\n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        console.log(\"*&*&*&*&* \", this.state.user)\n\n        RestaurantDataService.getAll()\n\n            .then(response => {\n                // const random_num = Math.floor(Math.random()* response.data.lenth)\n                // console.log(\"len \", random_num)\n                // const random = response.data[Math.floor(Math.random() * response.data.length)]\n                // console.log(\"ran \", random)\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    refreshList() {\n        this.retrieveRestaurants();\n        this.setState({\n            currentRestaurant: null,\n            currentIndex: -1\n        });\n    }\n\n    setActiveRestaurant(restaurant, index) {\n        this.setState({\n            currentRestaurant: restaurant,\n            currentIndex: index\n        });\n        console.log(\"res current index \", this.state.currentIndex)\n    }\n\n    searchCity(event) {\n        // debugger;\n        RestaurantDataService.findByCity(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    currentRestaurant: null\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOption: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    // state = {\n    //     selectedOption: null,\n    // };\n\n    handleChange = (event) => {\n        // debugger;\n        this.setState({ selectedOption: event.target.value }, () =>\n            console.log('Option selected: ', event)\n        )\n    }\n\n    // handleChange(event) {\n    //     console.log(event)\n    //     this.setState({\n    //         value: event.target.value\n    //     });\n\n    // }\n\n    // handleSubmit(event) {\n    //     console.log(\"handleSubmit \", event);\n    //     // debugger;\n    //     event.preventDefault();\n    // }\n\n\n\n    render() {\n        const { restaurants, currentRestaurant, currentIndex } = this.state;\n\n        return (\n            // <div className='rowC'>\n            <div className=\"bg\">\n            <div className=\"card\">\n            {/* <div className=\"list row\"> */}\n                <div className=\"col-md-8\">\n                    {/* <div className=\"input-group mb-3\"> */}\n                        <h5>Restaurants by City</h5>\n                        <div className=\"container\">\n\n                                <form onSubmit={this.searchCity}>\n                                    {/* <Select\n                                        value={this.state.selectedOption}\n                                        onChange={this.handleChange}\n                                        options={\n                                        this.state.cities.map((city, index) => {\n                                            return {\n                                                label: city.city,\n                                                value: city\n                                                // key: index\n                                            }\n                                        })\n                                    }\n                                    /> */}\n                                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    // <select className=\"mdb-select md-form colorful-select dropdown-primary\"\n                                        value={this.state.selectedOption}\n                                        onChange={this.handleChange}>\n                                        {/* {citiesList} */}\n                                        {/* <option selected value=\"\" disable selected>Choose a city</option> */}\n                                        {this.state.cities.map((city, index) => (\n                                            \n                                            <option key={index} value={city.city}>{city.city}</option>\n                                        ))}\n                                    </select>\n                                    \n                                    {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                    <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                        Submit\n                                    </button>\n                                </form>\n                        </div>\n                </div>\n                <div className=\"col-md-8\">\n                    <h4>Restaurant List</h4>\n                    <ul className=\"list-group\">\n                        {restaurants &&\n                            restaurants.map((restaurant, index) => (\n                                <li\n                                    className={\n                                        \"list-group-item \" +\n                                        (index === currentIndex ? \"active\" : \"\")\n                                    }\n                                    onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                    key={index}>\n                                    {restaurant.name}\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n\n                <div className=\"col=md-6\">\n                    {currentRestaurant ? (\n                        <div>\n                            <h4>Restaurant</h4>\n                            <div>\n                                <label>\n                                    <strong>Name:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.name}\n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Website:</strong>\n                                </label>{\" \"}\n                                <a target='_blank' href={currentRestaurant.website}>{currentRestaurant.website}</a>\n                                \n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Address:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.address}\n                            </div>\n                            {/* <div>\n                                <label>\n                                    <strong>City:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.city}\n                            </div> */}\n                            <ul>\n                                <label>\n                                    <strong>Cuisines:</strong>\n                                </label>\n                                {/* {currentTutorial.category} */}\n                                {currentRestaurant.cuisine.map((cuisine) => {\n                                    return <li key={cuisine.id}>{cuisine.type}</li>\n                                })}\n                            </ul>\n                            <Link\n                                to={\"/restaurants/\" + currentRestaurant.id}\n                                className=\"btn btn-outline-primary btn-sm\">\n                                Edit\n                            </Link>\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Restaurant...</p>\n                        </div>\n                    )}\n                </div>\n                </div>\n                {/* <div className=\"bg\"></div> */}\n                {/* <img className=\"bg\" src={images} alt=\"Food\" /> */}\n                {/* <Wheel restaurants={this.state.restaurants}/> */}\n            {/* </div> */}\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport '../index.css';\n\nexport default class Restaurant extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeWebsite = this.onChangeWebsite.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n        this.onChangeCity = this.onChangeCity.bind(this);\n        this.getRestaurant = this.getRestaurant.bind(this);\n        this.updateRestaurant = this.updateRestaurant.bind(this);\n        this.deleteRestaurant = this.deleteRestaurant.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setCuisine = this.setCuisine.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentRestaurant: {\n                id: null,\n                name: \"\",\n                website: \"\",\n                address: \"\",\n                city: \"\",\n                cuisine: '',\n            },\n            cuisines: [],\n\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getRestaurant(this.props.match.params.id);\n        this.retrieveCuisines();\n    }\n\n    onChangeName(e) {\n        const name = e.target.value;\n\n        this.setState(prevState => ({\n                currentRestaurant: {\n                    ...prevState.currentRestaurant,\n                    name: name\n            }\n        }));\n    }\n\n    onChangeWebsite(e) {\n        const website = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                website: website\n            }\n        }));\n    }\n\n    onChangeAddress(e) {\n        const address = e.target.value\n        \n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                address: address\n            }\n        }));\n    }\n\n    onChangeCity(e) {\n        const city = e.target.value\n\n        this.setState(prevState => ({\n            currentRestaurant: {\n                ...prevState.currentRestaurant,\n                city: city\n            }\n        }));\n    }\n\n    getRestaurant(id) {\n        RestaurantDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentRestaurant: response.data\n                });\n                console.log(\"get restaurant \", response.data)\n                console.log(this.state.currentRestaurant)\n                console.log(this.state.currentRestaurant.cuisine)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateRestaurant() {\n\n        RestaurantDataService.update(\n            this.state.currentRestaurant.id, \n            this.state.currentRestaurant\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The restaurant was update successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteRestaurant() {\n        RestaurantDataService.delete(this.state.currentRestaurant.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/restaurants\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieve cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setCuisine(cuisine, index) {\n        console.log(\"set cuisine \", cuisine)\n        this.setState({\n            cuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    handleChange(event) {\n        const data = {\n            id: this.state.currentRestaurant.id,\n            name: this.state.currentRestaurant.name,\n            website: this.state.currentRestaurant.website,\n            address: this.state.currentRestaurant.address,\n            city: this.state.currentRestaurant.city,\n\n            cuisine: event.target.value\n        };\n        // console.log(event.target.getAttribute(\"data-id\").value)\n        console.log(\"event target \", event.target.value)\n\n        this.setState({\n            currentRestaurant: data\n        })\n        // console.log(\"category\", category)\n\n        event.preventDefault();\n    }\n\n    render() {\n        const { currentRestaurant } = this.state\n\n        return (\n            <div className=\"ad\">\n            <div className=\"card\">\n                {currentRestaurant ? (\n                    <div className=\"edit-form\">\n                        <h4>Restaurant</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    value={currentRestaurant.name}\n                                    onChange={this.onChangeName}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"website\">Website</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"website\"\n                                    value={currentRestaurant.website}\n                                    onChange={this.onChangeWebsite}\n                                    name=\"website\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"address\">Address</label>\n                                <input \n                                    type=\"address\"\n                                    className=\"form-control\"\n                                    id=\"address\"\n                                    value={currentRestaurant.address}\n                                    onChange={this.onChangeAddress}\n                                    // name=\"address\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"city\">City</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"city\"\n                                    value={currentRestaurant.city}\n                                    onChange={this.onChangeCity}\n                                    name=\"city\"\n                                />\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"city\">Cuisine</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"cuisine\"\n                                    required value=\n                                    {currentRestaurant.cuisine ? (<ul>\n                                        <label>\n                                            <strong>Cuisines</strong>\n                                        </label>\n        \n                                        {currentRestaurant.cuisine.map((cuisine) => {\n                                            return <li>{cuisine.type}</li>\n                                        })}\n                                    </ul>) : ('')}\n                                    name=\"cuisine\"\n                                />\n                            </div> */}\n\n                            {/* {currentRestaurant.cuisine ? (<ul>\n                                <label>\n                                    <strong>Cuisines</strong>\n                                </label>\n\n                                {currentRestaurant.cuisine.map((cuisine) => {\n                                    return <li >{cuisine.type}</li>\n                                })}\n                            </ul>) : ('')} */}\n                            {/* <ul>\n                                <label>\n                                    <strong>Cuisines:</strong>\n                                </label>\n\n                                {currentRestaurant.cuisine.map((cuisine) => {\n                                    return <li >{cuisine.type}</li>\n                                })}\n                            </ul> */}\n\n                            {/* <div >\n                                <h4>Cuisine List</h4>\n                                <ul className=\"list-group\">\n                                    {currentRestaurant && \n                                        this.state.currentRestaurant.cuisine.map((cuisine) => (\n                                            <li\n                                                // className={\n                                                //     \"list-group-item \" +\n                                                //     (index === currentIndex ? \"active\" : \"\")\n                                                // }\n                                                // onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                                // key={index}\n                                                >\n                                                {cuisine.type}\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div> */}\n\n\n\n                        </form>\n\n\n                        <div className=\"container\">\n                            <label htmlFor=\"city\">Add Cuisine</label>\n                                <form >\n                                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                        value={this.state.cuisine}\n                                        onChange={this.handleChange}>\n                                        {this.state.cuisines.map((cuisine) => (\n                                            <option key={cuisine.id} value={cuisine.id}>{cuisine.type}</option>\n                                        ))}\n                                    </select>\n                                    {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                </form>\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-outline-primary btn-sm\"\n                            onClick={this.updateRestaurant}>\n                            Update\n                        </button>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-outline-primary btn-sm\"\n                            onClick={this.deleteRestaurant}>\n                            Delete\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Click on a Restaurant</p>\n                    </div>\n                )}\n            </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    padding: 20px;\n    text-align:center;\n`;\n\nclass AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n        this.clearSearchBox = this.clearSearchBox.bind(this);\n    }\n\n    componentDidMount({ map, mapApi } = this.props) {\n        const options = {\n            // restrict your search to a specific type of result\n            fields: [\"name\", \"url\", \"website\", \"address_components\", \"geometry\"],\n            types: ['establishment'],\n            // restrict your search to a specific country, or an array of countries\n            // componentRestrictions: { country: ['gb', 'us'] },\n        };\n        this.autoComplete = new mapApi.places.Autocomplete(\n            this.searchInput,\n            options,\n        );\n        this.autoComplete.addListener('place_changed', this.onPlaceChanged);\n        this.autoComplete.bindTo('bounds', map);\n    }\n\n    componentWillUnmount({ mapApi } = this.props) {\n        mapApi.event.clearInstanceListeners(this.searchInput);\n    }\n\n    onPlaceChanged = ({ map, addplace } = this.props) => {\n        const place = this.autoComplete.getPlace();\n        console.log(\"place \", place)\n        console.log(\"contact \", place.website)\n\n        if (!place.geometry) return;\n        if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n        } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n        }\n\n        addplace(place);\n        this.searchInput.blur();\n    };\n\n    clearSearchBox() {\n        this.searchInput.value = '';\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <input\n                    className=\"search-input\"\n                    ref={(ref) => {\n                        this.searchInput = ref;\n                    }}\n                    type=\"text\"\n                    onFocus={this.clearSearchBox}\n                    placeholder=\"Enter a location\"\n                />\n            </Wrapper>\n        );\n    }\n}\n\nexport default AutoComplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: absolute;\n    width: 38px;\n    height: 37px;\n    background-image: url(https://icon-library.com/images/pin-icon-png/pin-icon-png-9.jpg);\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-transform: translate(-50%,-50%);\n    -ms-transform: translate(-50%,-50%);\n    transform: translate(-50%,-50%);\n    cursor: grab;\n`;\n\nconst Marker = ({ text, onClick }) => (\n    <Wrapper\n        alt={text}\n        onClick={onClick}\n    />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;","import React, { Component } from 'react';\n\nimport GoogleMapReact from 'google-map-react';\n\nimport styled from 'styled-components';\n\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\n\nimport { Descriptions } from 'antd';\nimport RestaurantDataService from \"../services/restaurant.service\";\n\n// import AddCuisine from \"./add-cuisine\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY\nconst Wrapper = styled.main`\n    width: 100%;\n    height: 100%;\n`;\n\n\n\nclass MyGoogleMap extends Component {\n    constructor(props) {\n        super(props)\n        this.saveRestaurant = this.saveRestaurant.bind(this)\n        this.newRestaurant = this.newRestaurant.bind(this)\n\n    }\n\n    state = {\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        user: localStorage.getItem('id'),\n        places: [],\n        restaurant_name: '',\n        website: '',\n        center: [],\n        zoom: 9,\n        address: '',\n        city: '',\n        state: '',\n        draggable: true,\n        lat: null,\n        lng: null,\n\n        submitted: false\n    };\n\n    componentWillMount() {\n        // this.setCurrentLocation();\n        this.setState({\n            center: [47.608013, -122.335167],\n            lat: 47.608013,\n            lng: -122.335167,\n        })\n    }\n\n    saveRestaurant() {\n        const data = {\n            user: this.state.user,\n            name: this.state.restaurant_name,\n            website: this.state.website,\n            address: this.state.address,\n            city: this.state.city\n        };\n        // this.autoComplete = new mapApi.places.Autocomplete(\n        //     this.state.address,\n        // );\n\n        // const auto = this.autoComplete.getPlace()\n        console.log(\"potato \", data)\n\n        RestaurantDataService.create(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    name: response.data.name, \n                    website: response.data.website,\n                    address: response.data.address,\n                    city: response.data.city,\n                    user: this.state.user,\n\n                    submitted: true\n                    \n                });\n                console.log(\"saveRestaurant \", this.state.submitted)\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newRestaurant() {\n        this.setState({\n            id: null,\n            user: this.state.user,\n            name: \"\",\n            website: \"\",\n            address: \"\",\n            city: \"\",\n\n            submitted: false\n        });\n        console.log(\"newRestaurant \", this.submitted)\n    }\n\n\n    onMarkerInteraction = (childKey, childProps, mouse) => {\n        this.setState({\n            draggable: false,\n            lat: mouse.lat,\n            lng: mouse.lng\n        });\n    }\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n        this.setState({ draggable: true });\n        this._generateAddress();\n    }\n\n    _onChange = ({ center, zoom }) => {\n        this.setState({\n            center: center,\n            zoom: zoom,\n        });\n\n    }\n\n    _onClick = (value) => {\n        this.setState({\n            lat: value.lat,\n            lng: value.lng\n        });\n    }\n\n    apiHasLoaded = (map, maps) => {\n        this.setState({\n            mapApiLoaded: true,\n            mapInstance: map,\n            mapApi: maps,\n        });\n\n        this._generateAddress();\n    };\n\n    addPlace = (place) => {\n        console.log(\"addPlace \", place)\n        this.setState({\n            places: [place],\n            restaurant_name: place.name,\n            website: place.website,\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n        });\n        this._generateAddress()\n    };\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        city = addressArray[i].long_name;\n                        return city;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n    _generateAddress() {\n        const {\n            mapApi\n        } = this.state;\n\n        const geocoder = new mapApi.Geocoder;\n\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\n            console.log(results);\n            console.log(status);\n            if (status === 'OK') {\n                if (results[0]) {\n                    this.zoom = 12;\n                    const addressArray = results[0].address_components\n                    const city = this.getCity(addressArray)\n                    const state = this.getState(addressArray)\n                    this.setState({ \n                        address: results[0].formatted_address,\n                        city: city,\n                        state: state});\n                } else {\n                    window.alert('No results found');\n                }\n            } else {\n                window.alert('Geocoder failed due to: ' + status);\n            }\n\n        });\n    }\n\n    // Get Current Location Coordinates\n    // setCurrentLocation() {\n    //     if ('geolocation' in navigator) {\n    //         navigator.geolocation.getCurrentPosition((position) => {\n    //             this.setState({\n    //                 center: [position.coords.latitude, position.coords.longitude],\n    //                 lat: position.coords.latitude,\n    //                 lng: position.coords.longitude\n    //             });\n    //         });\n    //     }\n    // }\n\n    render() {\n        const {\n            places, mapApiLoaded, mapInstance, mapApi,\n        } = this.state;\n\n\n        return (\n            <Wrapper>\n                {mapApiLoaded && (\n                    <div>\n                        <h4 className=\"text-center\">Restaurant Search</h4>\n                        <AutoComplete className=\"auto-complete\" map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n                    </div>\n                )}\n                <GoogleMapReact\n                    center={this.state.center}\n                    zoom={this.state.zoom}\n                    draggable={this.state.draggable}\n                    onChange={this._onChange}\n                    onChildMouseDown={this.onMarkerInteraction}\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\n                    onChildMouseMove={this.onMarkerInteraction}\n                    onChildClick={() => console.log('child click')}\n                    onClick={this._onClick}\n                    bootstrapURLKeys={{\n                        key: `${API_KEY}`,\n                        libraries: ['places', 'geometry'],\n                    }}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n                >\n\n                    <Marker\n                        text={this.state.address}\n                        lat={this.state.lat}\n                        lng={this.state.lng}\n                    />\n\n\n                </GoogleMapReact>\n\n                {/* <div className=\"info-wrapper\">\n                    <div className=\"map-details\">Restaurant: <span>{this.state.restaurant_name}</span></div>\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\n                </div> */}\n                <div className=\"descriptions\">\n                    <Descriptions bordered>\n                        {/* <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item> */}\n                        {/* <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item> */}\n                        <Descriptions.Item label=\"Restaurant\">{this.state.restaurant_name}</Descriptions.Item>\n                        <br />\n                        <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n                <div className=\"submit-form\">\n                    {this.state.submitted ? (\n                        <div>\n                            <h4>You submitted successfully!</h4>\n                            <button className=\"btn btn-success\" onClick={this.newRestaurant}>\n                                Add\n                            </button>\n                        </div>\n                    ) : (\n                        <div>\n                        <button onClick={this.saveRestaurant} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                        </div>\n                    )}\n\n\n                </div>\n            </Wrapper >\n\n        );\n    }\n}\n\nexport default MyGoogleMap;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport images from '../images/my_logo.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\n\t},\n\tlink: {\n\t\tmargin: theme.spacing(1, 1.5),\n\t},\n\ttoolbarTitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n\nfunction Header() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar\n\t\t\t\tposition=\"static\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\televation={0}\n\t\t\t\tclassName={classes.appBar}\n\t\t\t>\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.toolbarTitle}\n\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\t\tto=\"/whats_to_eat_react\"\n\t\t\t\t\t\t\tunderline=\"none\"\n\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\tclassName=\"nav-link h5 link-secondary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={images} alt=\"Logo\" />\n\t\t\t\t\t\t\t{/* WhatsToEat */}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/* <nav>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<Button\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\tcomponent={NavLink}\n\t\t\t\t\t\tto=\"/logout\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Button> */}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n\t'@global': {\n\t\tul: {\n\t\t\tmargin: 0,\n\t\t\tpadding: 0,\n\t\t\tlistStyle: 'none',\n\t\t},\n\t},\n\tfooter: {\n\t\tborderTop: `1px solid ${theme.palette.divider}`,\n\t\tmarginTop: theme.spacing(8),\n\t\tpaddingTop: theme.spacing(3),\n\t\tpaddingBottom: theme.spacing(3),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tpaddingTop: theme.spacing(6),\n\t\t\tpaddingBottom: theme.spacing(6),\n\t\t},\n\t},\n}));\n\nfunction Copyright() {\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © '}\n\t\t\t<Link color=\"inherit\" href=\"https://material-ui.com/\">\n\t\t\t\tYour Website\n\t\t\t</Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\n// const footers = [\n// \t{\n// \t\ttitle: 'Company',\n// \t\tdescription: ['Team', 'History', 'Contact us', 'Locations'],\n// \t},\n// \t{\n// \t\ttitle: 'Features',\n// \t\tdescription: [\n// \t\t\t'Cool stuff',\n// \t\t\t'Random feature',\n// \t\t\t'Team feature',\n// \t\t\t'Developer stuff',\n// \t\t\t'Another one',\n// \t\t],\n// \t},\n// \t{\n// \t\ttitle: 'Resources',\n// \t\tdescription: [\n// \t\t\t'Resource',\n// \t\t\t'Resource name',\n// \t\t\t'Another resource',\n// \t\t\t'Final resource',\n// \t\t],\n// \t},\n// \t{\n// \t\ttitle: 'Legal',\n// \t\tdescription: ['Privacy policy', 'Terms of use'],\n// \t},\n// ];\n\nfunction Footer() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n\t\t\t\t{/* <Grid container spacing={4} justify=\"space-evenly\">\n\t\t\t\t\t{footers.map((footer) => (\n\t\t\t\t\t\t<Grid item xs={6} sm={3} key={footer.title}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n\t\t\t\t\t\t\t\t{footer.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{footer.description.map((item) => (\n\t\t\t\t\t\t\t\t\t<li key={item}>\n\t\t\t\t\t\t\t\t\t\t<Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid> */}\n\t\t\t\t<Box mt={5}>\n\t\t\t\t\t<Copyright />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory, Link } from 'react-router-dom';\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\temail: '',\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t// Trimming any whitespace\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/user/register/`, {\n\t\t\t\temail: formData.email,\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\thistory.push('/login');\n\t\t\t\tconsole.log(res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t});\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign up\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel=\"I want to receive inspiration, marketing promotions and updates via email.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" to=\"/login\">\n\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</Container>\n\t);\n}","import React, { useState } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory, Link } from 'react-router-dom';\n//MaterialUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// import images from '../images/indulge-restaurant.jpg';\nimport '../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function SignIn() {\n\tconst history = useHistory();\n\tconst initialFormData = Object.freeze({\n\t\tuser_name: '',\n\t\tpassword: '',\n\t});\n\n\tconst [formData, updateFormData] = useState(initialFormData);\n\n\t// function getCurrentUser(id) {\n\t// \tconst user = id;\n\t// \tconsole.log(\"*** USER \", user);\n\t// \treturn user;\n\t// }\n\n\tconst handleChange = (e) => {\n\t\tupdateFormData({\n\t\t\t...formData,\n\t\t\t[e.target.name]: e.target.value.trim(),\n\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(formData);\n\n\t\taxiosInstance\n\t\t\t.post(`/api/token/`, {\n\t\t\t\tuser_name: formData.user_name,\n\t\t\t\tpassword: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tlocalStorage.setItem('access_token', res.data.access);\n\t\t\t\tlocalStorage.setItem('refresh_token', res.data.refresh);\n\t\t\t\tlocalStorage.setItem('id', res.data.id);\n\t\t\t\tlocalStorage.setItem('user_name', res.data.user_name);\n\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.data));\n\n\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t'JWT ' + localStorage.getItem('access_token');\n\t\t\t\thistory.push('/');\n\t\t\t\t// console.log(res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\t// console.log(res.data.id)\n\t\t\t\t// getCurrentUser(res.data.id)\n\t\t\t});\n\t};\n\n\t// const getCurrentUser = () => {\n\t// \treturn JSON.parse(localStorage.getItem(\"user\"));\n\t// }\n\n\tconst classes = useStyles();\n\n\t// if (localStorage.getItem('access_token')) {\n\t// \thistory.push('/homepage')\n\t// }\n\n\treturn (\n\t\t// <Container component=\"main\" maxWidth=\"xs\">\n\t\t<Container>\n\t\t\t{/* <CssBaseline /> */}\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"card-login\">\n\n\t\t\t{/* <div className={classes.paper}> */}\n\t\t\t\t<Avatar className={classes.avatar}></Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"user_name\"\n\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\tname=\"user_name\"\n\t\t\t\t\t\tautoComplete=\"user_name\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <FormControlLabel\n\t\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\">\n\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link href=\"#\" variant=\"body2\" to=\"/register\">\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t{/* </div> */}\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div className=\"landing-wrapper\"\n\t\t\tstyle={{ backgroundImage: `url(${images})`}}>\n\t\t\t</div>         */}\n\t\t\t{/* <img src={images} alt=\"Logo\" /> */}\n\t\t\t{/* <div className=\"bg\"></div> */}\n\n\t\t</Container>\n\t);\n}","import React, { useEffect } from 'react';\nimport axiosInstance from '../axios';\nimport { useHistory } from 'react-router-dom';\n\nexport default function SignUp() {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\t// const response = \n\t\taxiosInstance.post('/api/user/logout/blacklist/', {\n\t\t\trefresh_token: localStorage.getItem('refresh_token'),\n\t\t});\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('refresh_token');\n\n\n\t\tlocalStorage.removeItem('id');\n\t\tlocalStorage.removeItem('user_name');\n\t\tlocalStorage.removeItem(\"user\");\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\n\t\thistory.push('/login');\n\t});\n\n\treturn <div>Logout</div>;\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../index.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default class Homepage extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCity = this.onChangeSearchCity.bind(this);\n        this.retrieveRestaurants = this.retrieveRestaurants.bind(this);\n        this.searchCity = this.searchCity.bind(this);\n        this.retrieveCities = this.retrieveCities.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onChangeSearchCuisine = this.onChangeSearchCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.searchCuisine = this.searchCuisine.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            restaurants: [],\n            currentRestaurant: null,\n            currentIndex: -1,\n            searchCity: \"\",\n            cities: [],\n            random_restaurant: '',\n            cuisines: [],\n            searchCuisine: \"\",\n        };\n    }\n\n    componentDidMount() {\n        // this.retrieveRestaurants();\n        this.retrieveCities();\n        this.retrieveCuisines();\n    }\n    \n\n    onChangeSearchCity(e) {\n        const searchCity = e.target.value;\n\n        this.setState({\n            searchCity: searchCity\n        });\n    }\n\n    retrieveRestaurants() {\n        console.log(\"*&*&*&*&* \", this.state.user)\n        // const random_num = Math.floor(Math.floor()* response.data.lenth)\n        RestaurantDataService.getAll()\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(response.data)\n                console.log(\"random restaurant \", response.data[Math.floor(Math.random() * response.data.length)])\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    searchCity(event) {\n        // debugger;\n        RestaurantDataService.findByCity(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    // currentRestaurant: null,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(\"search city\", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        event.preventDefault();\n    }\n\n    retrieveCities() {\n        RestaurantDataService.getAllCities()\n        .then(response => {\n            this.setState({\n                cities: response.data,\n                selectedOption: response.data[0].city,\n            });\n        })\n        .catch(e => {\n            console.log(e)\n        });\n    }\n\n    handleChange = (event) => {\n        // debugger;\n        this.setState({ selectedOption: event.target.value }, () =>\n            console.log('Option selected: ', event)\n        )\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n    onChangeSearchCuisine(e) {\n        const searchCuisine = e.target.value;\n\n        this.setState({\n            searchCuisine: searchCuisine\n        });\n    }\n    searchCuisine(event) {\n\n        console.log(\"***** \", this.state.selectedOption)\n        this.state.selectedOption = parseInt(this.state.selectedOption) + 1\n        RestaurantDataService.getRestaurants(this.state.selectedOption)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data,\n                    random_restaurant: response.data[Math.floor(Math.random() * response.data.length)]\n                });\n                console.log(\"cuisine restaurant data \", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            })\n        event.preventDefault();\n    }\n\n    // const classes = useStyles();\n\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"hm-card\">\n            \n                    <h1 className=\"heading\">\n                        <a target='_blank' href={this.state.random_restaurant.website}>\n                            {this.state.random_restaurant.name}\n                        </a>   \n                    </h1>\n                \n                    <div className=\"col-md-8\">\n                        <Button\n                                // className=\"submitBtn\"\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                // className={useStyles.submit}\n                                onClick={this.retrieveRestaurants}\n                            >\n                                Surprise Me\n                        </Button>\n                        <br />\n                        <br />\n                        <h5>Surprise by Location</h5>\n                        <div className=\"container\">\n                            <form onSubmit={this.searchCity}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}>\n                                    {/* {citiesList} */}\n                                    {this.state.cities.map((city, index) => (\n                                        <option key={index} value={city.city}>{city.city}</option>\n                                    ))}\n                                </select>\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n\n\n                        <h5>Surprise by Cuisine</h5>\n                        <div className=\"container\">\n                            <form onSubmit={this.searchCuisine}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}>\n                                    {this.state.cuisines.map((cuisine, index) => (\n                                        <option key={index} value={index}>{cuisine.type}</option>\n                                    ))}\n                                </select>\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n{/* \n                        <div className=\"container\">\n                            <form onSubmit={this.searchCity}>\n                                <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChange}>\n                                    {this.state.cuisines.map((cuisine, index) => (\n                                        <option key={index} value={cuisine.type}>{cuisine.type}</option>\n                                    ))}\n                                </select>\n                                <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div> */}\n\n\n                    </div>                         \n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport '../index.css';\n\nexport default class AddCuisine extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.saveCuisine = this.saveCuisine.bind(this);\n        this.newCuisine = this.newCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setActiveCuisine = this.setActiveCuisine.bind(this);\n\n        this.state = {\n            cuisines: [],\n            id: null,\n            type: \"\",\n            currentCuisine: null,\n            currentIndex: -1,\n            user: localStorage.getItem('id'),\n\n            submitted: false\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCuisines();\n        // this.refreshList();\n    }\n\n    onChangeType(e) {\n        this.setState({\n            type: e.target.value\n        });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieveCuisines \", response.data);\n                console.log(this.state.cuisines)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setActiveCuisine(cuisine, index) {\n        // console.log(\"*** \", cuisine)\n        // console.log(\"*** \", index)\n        this.setState({\n            currentCuisine: cuisine,\n            currentIndex: index\n        })\n        // console.log(\"*** \", this.state.currentCuisine)\n        // console.log(\"*** \", this.state.currentIndex)\n        // this.getCuisineRestaurants(this.state.currentIndex);\n    }\n\n    saveCuisine() {\n        const data = {\n            user: this.state.user,\n            type: this.state.type\n        };\n\n        RestaurantDataService.createCuisine(data)\n        // axiosInstance.create(data)\n            .then(response => {\n                this.setState({\n                    id: response.data.id,\n                    type: response.data.type,\n                    user: this.state.user,\n\n                    submitted: true\n                });\n                console.log(response.data)\n                // console.log(\"save submitted\", this.state.submitted)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    newCuisine() {\n        this.setState({\n            id: null,\n            type: \"\",\n            user: this.state.user,\n\n            submitted: false\n        });\n        console.log(\"new submitted \", this.state.submitted)\n    }\n    \n    deleteCuisine() {\n        // console.log(\"delete index, \", this.state.currentIndex)\n        // console.log(\"delete index, \", this.state.currentCuisine.id)\n        const index = parseInt(this.state.currentCuisine.id) + 1\n        console.log(\"index \", index)\n        RestaurantDataService.delete(index)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/addcuisine\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { cuisines, currentCuisine, currentIndex } = this.state;\n        return (\n            <div className=\"bg\">\n            <div className=\"card\">\n            <div className=\"submit-form\">\n                <h5>Add Cuisine Type</h5>\n                {this.state.submitted ? (\n                    <div>\n                        <h4>You submitted successfully!</h4>\n                        <button className=\"btn btn-success\" onClick={this.newCuisine}>\n                            Add\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <div className=\"form-group\">\n                            {/* <label htmlFor=\"title\">Type</label> */}\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"type\"\n                                required\n                                value={this.state.type}\n                                onChange={this.onChangeType}\n                                name=\"type\"\n                            />\n                        </div>\n\n                        <button onClick={this.saveCuisine} className=\"btn btn-success\">\n                            Submit\n                        </button>\n                    </div>\n                )}\n                    <div className=\"col-md-8\">\n                        <h4>Cuisine List</h4>\n\n                        <ul className=\"list-group\">\n                            {this.state.cuisines &&\n                                cuisines.map((cuisine, index) => (\n                                    <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentIndex ? \"active\" : \"\")\n                                        }\n                                        onClick={() => this.setActiveCuisine(cuisine, index)}\n                                        key={index}>\n                                        {cuisine.type}\n                                    </li>\n                                ))}\n                        </ul>\n\n                </div>\n                <div className=\"col-md-6\">\n                    {currentCuisine ? (\n                        <div>\n                            <h4>Cuisine</h4>\n                            <div>\n                                <label>\n                                    <strong>Type:</strong>\n                                </label>{\" \"}\n                                {currentCuisine.type}\n                            <Link\n                                to={\"/cuisines/\" + currentCuisine.id}\n                                className=\"btn btn-outline-primary btn-sm\">\n                                Edit\n                            </Link>\n                            </div>\n                            {/* <button value={currentCuisine.id} onClick={this.deleteCuisine} className=\"btn btn-success\">\n                            Delete\n                        </button> */}\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Category...</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            </div>\n            </div>\n        );\n    }\n\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport { Link } from \"react-router-dom\";\nimport AddCuisine from \"./add-cuisine\";\nimport '../index.css';\n\n\nexport default class CuisineList extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchCuisine = this.onChangeSearchCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.searchCuisine = this.searchCuisine.bind(this);\n        // this.refreshList = this.refreshList.bind(this);\n        // this.setActiveCuisine = this.setActiveCuisine.bind(this);\n        this.setActiveRestaurant = this.setActiveRestaurant.bind(this);\n        // this.removeAllTutorials = this.removeAllTutorials.bind(this);\n        // this.getCuisineRestaurants = this.getCuisineRestaurants.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        // this.deleteCuisine = this.deleteCuisine.bind(this);\n\n        this.state = {\n            user: localStorage.getItem('id'),\n            cuisines: [],\n            // currentCuisine: null,\n            // currentIndex: -1,\n            currentRestaurant: null,\n            currentResIndex: -1,\n            // currentCuisine: null,\n            // currentIndex: -1,\n            searchCuisine: \"\",\n            restaurants: [],\n            selectedOption: '',\n        };\n    }\n\n    componentDidMount() {\n        this.retrieveCuisines();\n        // this.refreshList();\n    }\n\n    onChangeSearchCuisine(e) {\n        const searchCuisine = e.target.value;\n\n        this.setState({\n            searchCuisine: searchCuisine\n        });\n    }\n\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieveCuisines \", response.data);\n                console.log(this.state.cuisines)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    // refreshList() {\n    //     this.retrieveCuisines();\n    //     this.setState({\n    //         currentCuisine: null,\n    //         currentIndex: -1\n    //     })\n    //     // console.log(\"*** \", this.state.currentIndex)\n    // }\n\n    // setActiveCuisine(cuisine, index) {\n    //     this.setState({\n    //         currentCuisine: cuisine,\n    //         currentIndex: index\n    //     })\n    //     // console.log(\"*** \", this.state.currentIndex)\n    //     this.getCuisineRestaurants(this.state.currentIndex);\n    // }\n    setActiveRestaurant(restaurant, index) {\n        this.setState({\n            currentRestaurant: restaurant,\n            currentResIndex: index\n        })\n        // console.log(\"*** \", this.state.currentIndex)\n        // this.getCuisineRestaurants(this.state.currentIndex);\n    }\n\n    searchCuisine(event) {\n\n        console.log(\"***** \", this.state.selectedOption)\n        const index = parseInt(this.state.selectedOption) + 1\n        RestaurantDataService.getRestaurants(index)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(\"cuisine restaurant data \", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            })\n        event.preventDefault();\n    }\n\n    handleChange = (event) => {\n        // debugger;\n        this.setState({ selectedOption: event.target.value}, () =>\n            console.log('Option selected: ', event.target.value)\n        )\n    }\n\n    getCuisineRestaurants(id) {\n        RestaurantDataService.getRestaurants(id)\n            .then(response => {\n                this.setState({\n                    restaurants: response.data\n                });\n                console.log(\"cuisine restaurant data \", response.data)\n            })\n            .catch(e => {\n                console.log(e);\n            })\n    }\n    render() {\n        const { cuisines, restaurants, currentRestaurant, currentResIndex} = this.state;\n\n        return (\n            <div className=\"bg\">\n            <div className=\"card\">\n            {/* <div className='rowC'>\n            <div className=\"list row\"> */}\n                <div className=\"col-md-8\">\n                    {/* <div className=\"input-group mb-3\"> */}\n                        <h5>Restaurants by Cuisine</h5>\n                        <div className=\"container\">\n\n                                <form onSubmit={this.searchCuisine}>\n                                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\"\n                                    // <select className=\"mdb-select md-form colorful-select dropdown-primary\"\n                                        value={this.state.selectedOption}\n                                        onChange={this.handleChange}>\n                                        {/* {citiesList} */}\n                                        {/* <option selected value=\"\" disable selected>Choose a city</option> */}\n                                        {cuisines.map((cuisine, index) => (\n                                            \n                                            <option key={index} value={index}>{cuisine.type}</option>\n                                        ))}\n                                    </select>\n                                    \n                                    {/* <input type=\"submit\" value=\"Submit\" /> */}\n                                    <button className=\"submitBtn\" type=\"submit\" value=\"Submit\">\n                                        Submit\n                                    </button>\n                                </form>\n                        </div>\n                </div>\n\n\n                <div className=\"col-md-8\">\n                    <h4>Restaurant List</h4>\n\n                    <ul className=\"list-group\">\n                        {this.state.restaurants &&\n                            restaurants.map((restaurant, index) => (\n                                <li\n                                    className={\n                                        \"list-group-item \" +\n                                        (index === currentResIndex ? \"active\" : \"\")\n                                    }\n                                    onClick={() => this.setActiveRestaurant(restaurant, index)}\n                                    key={index}>\n                                    {restaurant.name}\n                                </li>\n                            ))}\n                    </ul>\n\n                </div>\n\n                {/* <div className=\"col-md-8\">\n                    <h4>Cuisine List</h4>\n\n                    <ul className=\"list-group\">\n                        {this.state.cuisines &&\n                            cuisines.map((cuisine, index) => (\n                                <li\n                                    className={\n                                        \"list-group-item \" +\n                                        (index === currentIndex ? \"active\" : \"\")\n                                    }\n                                    onClick={() => this.setActiveCuisine(cuisine, index)}\n                                    key={index}>\n                                    {cuisine.type}\n                                </li>\n                            ))}\n                    </ul>\n\n                </div> */}\n\n                <div className=\"col-md-6\">\n                    {currentRestaurant ? (\n                        <div>\n                            <h4>Restaurant</h4>\n                            <div>\n                                <label>\n                                    <strong>Name:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.name}\n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Website:</strong>\n                                </label>{\" \"}\n                                <a target='_blank' href={currentRestaurant.website}>{currentRestaurant.website}</a>\n                                \n                            </div>\n                            <div>\n                                <label>\n                                    <strong>Address:</strong>\n                                </label>{\" \"}\n                                {currentRestaurant.address}\n                            </div>\n\n                            {/* <Link\n                                to={\"api/cuisine/\" + currentCuisine.id}\n                                className=\"btn btn-outline-primary btn-sm\">\n                                Edit\n                            </Link> */}\n                            {/* <Link\n                                to={\"/cuisines/\" + currentRestaurant.id}\n                                className=\"btn btn-outline-primary btn-sm\">\n                                Edit\n                            </Link> */}\n                        </div>\n                    ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Category...</p>\n                        </div>\n                    )}\n                {/* </div>\n                \n            </div> */}\n            {/* <AddCuisine /> */}\n            </div>\n            </div>\n            </div>\n        );\n    }\n\n}","import React, { Component } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.service\";\nimport '../index.css';\n\nexport default class Cuisine extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeType = this.onChangeType.bind(this);\n        this.getCuisine = this.getCuisine.bind(this);\n        // this.updateCuisine = this.updateCuisine.bind(this);\n        this.deleteCuisine = this.deleteCuisine.bind(this);\n        this.retrieveCuisines = this.retrieveCuisines.bind(this);\n        this.setCuisine = this.setCuisine.bind(this);\n        // this.getCuisineRestaurants = this.getCuisineRestaurants.bind(this)\n        // this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            currentCuisine: {\n                id: null,\n                type: \"\",\n                \n            },\n            // cuisines: [],\n            restaurants: [],\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCuisine(this.props.match.params.id);\n        this.retrieveCuisines();\n    }\n\n    onChangeType(e) {\n        const type = e.target.value;\n\n        this.setState(prevState => ({\n                currentCuisine: {\n                    ...prevState.currentCuisine,\n                    type: type\n            }\n        }));\n    }\n\n    getCuisine(id) {\n        RestaurantDataService.getCuisine(id)\n            .then(response => {\n                this.setState({\n                    currentCuisine: response.data,\n                    \n                });\n                // console.log(\"get restaurant \", response.data)\n                console.log(this.state.restaurants)\n                // console.log(this.state.currentRestaurant.cuisine)\n            })\n            .catch(e => {\n                console.log(e);\n            });\n        // this.getCuisineRestaurants(id);\n    }\n\n    // getCuisineRestaurants(id) {\n    //     RestaurantDataService.getRestaurants(id)\n    //         .then(response => {\n    //             this.setState({\n    //                 restaurants: response.data\n    //             });\n    //             console.log(\"get restaurant \", response.data)\n    //             console.log(this.state.restaurants)\n    //             // console.log(this.state.currentRestaurant.cuisine)\n    //         })\n    //         .catch(e => {\n    //             console.log(e);\n    //         });\n    // }\n\n    // updateRestaurant() {\n\n    //     RestaurantDataService.update(\n    //         this.state.currentRestaurant.id, \n    //         this.state.currentRestaurant\n    //     )\n    //         .then(response => {\n    //             console.log(response.data);\n    //             this.setState({\n    //                 message: \"The restaurant was update successfully!\"\n    //             });\n    //         })\n    //         .catch(e => {\n    //             console.log(e);\n    //         });\n    // }\n\n    deleteCuisine() {\n        RestaurantDataService.deleteCuisine(this.state.currentCuisine.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push(\"/addcuisine\")\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    retrieveCuisines() {\n        RestaurantDataService.getAllCuisines()\n\n            .then(response => {\n                this.setState({\n                    cuisines: response.data\n                });\n                console.log(\"retrieve cuisines \", response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setCuisine(cuisine, index) {\n        console.log(\"set cuisine \", cuisine)\n        this.setState({\n            cuisine: cuisine,\n            currentIndex: index\n        })\n    }\n\n    // handleChange(event) {\n    //     const data = {\n    //         id: this.state.currentCuisine.id,\n    //         type: this.state.currentRestaurant.type,\n    //         restaurants: this.state.currentRestaurant.restaurants,\n\n    //         cuisine: event.target.value\n    //     };\n    //     // console.log(event.target.getAttribute(\"data-id\").value)\n    //     console.log(\"event target \", event.target.value)\n\n    //     this.setState({\n    //         currentRestaurant: data\n    //     })\n    //     // console.log(\"category\", category)\n\n    //     event.preventDefault();\n    // }\n\n    render() {\n        const { currentCuisine } = this.state\n\n        return (\n            <div className=\"ad\">\n            <div className=\"card\">\n                {currentCuisine ? (\n                    <div className=\"edit-form\">\n                        <h4>Cuisine</h4>\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Type</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    value={currentCuisine.type}\n                                    onChange={this.onChangeType}\n                                />\n                            </div>\n\n\n                            {/* <div className=\"form-group\">\n                                <label htmlFor=\"city\">City</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"city\"\n                                    value={currentRestaurant.city}\n                                    onChange={this.onChangeCity}\n                                    name=\"city\"\n                                />\n                            </div> */}\n                        </form>\n                        {/* <ul>\n                            <label>\n                                <strong>Cuisines:</strong>\n                            </label>\n                            {this.state.restaurants.map((restaurant) => {\n                                return <li key={restaurant.id}>{restaurant.name}</li>\n                            })}\n                        </ul> */}\n\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-outline-primary btn-sm\"\n                            onClick={this.deleteCuisine}>\n                            Delete\n                        </button>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                        <p>Click on a Restaurant</p>\n                    </div>\n                )}\n            </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Switch, Route, NavLink, useLocation } from \"react-router-dom\";\nimport Login from './login';\nimport Logout from './logout';\n\n// const Navigation = () => {\n//     const { isAuth } = localStorage.getItem(\"access_token\");\n\n//     return isAuth ? <Login /> : <Logout />\n// }\n\n\n\nfunction Navigation(props) {\n    const location = useLocation();\n    // console.log(\"path 1\", window.location)\n    // console.log(\"path 2\" , window.location.pathname)\n\n    // console.log(\"nav rerender \", localStorage.getItem('access_token'))\n    if (!localStorage.getItem('access_token')) {\n        return (\n            <div className=\"navigation\">\n                <nav id=\"topnav\" className=\"navbar navbar-expand navbar-light\">\n                    <div className=\"container\">\n                        {/* <NavLink  className=\"navbar-brand\" to=\"/login\">\n                            <span className=\"ml-auto\">Login</span>\n                        </NavLink> */}\n\n                        <div>\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className={`nav-item ${\n                                    window.location.pathname === \"/login\" ? \"active\" : \"\"\n                                }`}\n                                >\n                                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/login\"}>\n                                    Login\n                                </NavLink>\n                                \n                                </li>\n                                <li class={`nav-item ${\n                                    window.location.pathname === \"/register\" ? \"active\" : \"\"\n                                }`}\n                                >\n                                    <NavLink  className=\"nav-link h5 link-secondary\" to=\"/register\">\n                                        Register\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav> \n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"navigation\">\n                <nav id=\"topnav\" className=\"navbar navbar-expand navbar-light\">\n                    <div className=\"container\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            {/* <li className={`nav-item ${\n                                window.location.pathname === \"/restaurants\" ? \"active\" : \"\"\n                            }`}\n                            >\n                            <NavLink  className=\"navlink link-daark\" to=\"/restaurants\">\n                                    Restaurants\n                            </NavLink>\n                            </li> */}\n                            <li class={`nav-item ${\n                                window.location.pathname === \"/login\" ? \"active\" : \"\"\n                            }`}\n                            >\n                                <NavLink className=\"nav-link h5 link-secondary\" to={\"/logout\"}>\n                                    Logout\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n\n        )\n    }\n\n}\n\nexport default Navigation;\n","import './App.css';\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Route, Switch, Link, NavLink, Nav, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport images from './images/my_logo.jpg';\n\nimport RestaurantList from \"./components/restaurant-list.component\";\n// import AddRestaurant from \"./components/add-restaurant.component\";\nimport Restaurant from \"./components/restaurant.component\";\n// import Maps from \"./components/maps.component\";\nimport MyGoogleMap from './components/MyGoogleMap';\n// import AddCuisine from \"./components/add-cuisine\";\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport Logout from \"./components/logout\";\nimport Homepage from \"./components/homepage\"\nimport CuisineList from './components/cuisine-list';\nimport Cuisine from './components/cuisine';\nimport AddCuisine from './components/add-cuisine';\nimport Navigation from './components/navigation';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n\n      {/* id=\"sidebar\" className=\"col-sm-3 col-md-3 col-lg-2 d-md-block sidebar text-start\" */}\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <ul className=\"nav flex-row\" id=\"navigation\">\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/restaurants\"}>\n                  <span className=\"ml-2\">Restaurants</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/add\"}>\n                  <span className=\"ml-2\">Add Restaurant</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/cuisine\"}>\n                  <span className=\"ml-auto\">Cuisines</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink  className=\"nav-link h5 link-secondary\" to={\"/addcuisine\"}>\n                  <span className=\"ml-auto\">Add Cuisines</span>\n                </NavLink>\n              </li>\n            </ul>\n\n            <Navigation />\n          </nav>\n\n        <div>\n          <Switch>\n            {/* <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return (\n                      localStorage.getItem('access_token') ?\n                      <Redirect to=\"/home\" /> :\n                      <Redirect to=\"/login\" /> \n                    )\n                }}\n              /> */}\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login/\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/whats_to_eat_react\">\n              <Homepage />\n              </Route>\n            <Route path=\"/restaurants\">\n              <RestaurantList />\n            </Route>\n            <Route path=\"/restaurants/:id\" component={Restaurant} />\n            <Route path=\"/cuisine\" component={CuisineList} />\n            <Route path=\"/cuisines/:id\" component={Cuisine} />\n            <Route path=\"/addcuisine\" component={AddCuisine} />\n\n            <div className=\"main-wrapper\">\n              <Route exact path=\"/add\" component={MyGoogleMap} />\n            </div>\n          </Switch>\n          {/* <Footer /> */}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}